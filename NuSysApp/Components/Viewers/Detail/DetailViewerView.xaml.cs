using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices.WindowsRuntime;
using System.Threading.Tasks;
using Windows.Foundation;
using Windows.Foundation.Collections;
using Windows.System;
using Windows.UI.Input;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Controls.Primitives;
using Windows.UI.Xaml.Data;
using Windows.UI.Xaml.Input;
using Windows.UI.Xaml.Media;
using Windows.UI.Xaml.Navigation;
using LdaLibrary;
using MyToolkit.Utilities;
using NusysIntermediate;
using WinRTXamlToolkit.IO.Serialization;

// The User Control item template is documented at http://go.microsoft.com/fwlink/?LinkId=234236

namespace NuSysApp
{
    public sealed partial class DetailViewerView : AnimatableUserControl
    {

        private ElementViewModel _activeVm;
        private object _regionEditorPivotItem;
        private IDetailViewable _currentDetailViewable;
        
        public DetailViewerView()
        {
            this.InitializeComponent();

            xMetadataEditorView = (MetadataEditorView) FindName("xMetadataEditorView");
            xRegionEditorView = (RegionEditorTabView)FindName("xRegionEditorView");
            xRegionEditorView.DetailViewerView = this;
            
            Visibility = Visibility.Collapsed;
            
            //NewTagBox.Activate();


            DataContextChanged += delegate(FrameworkElement sender, DataContextChangedEventArgs args)
            {
                var dataContext = DataContext as DetailViewerViewModel;


                if (dataContext == null) { 
                    return;
                }

                dataContext.SizeChanged += Resize;


                xRegionEditorView.DataContext = DataContext;

                var vm = dataContext;

                vm.PropertyChanged += OnPropertyChanged;
                Tags.ItemsSource = vm.Tags;
                SuggestedTags.ItemsSource = vm.SuggestedTags;
                vm.MakeTagList();
                vm.MakeSuggestedTagList();

                xMetadataEditorView.Metadatable = vm.CurrentElementController;
                
                this.Width = SessionController.Instance.SessionView.ActualWidth / 2;
                this.Height = SessionController.Instance.SessionView.ActualHeight;
                vm.TabPaneHeight = this.Width; //I know that this is confusing, but we switched the tab from on the side to on the top. I should refactor this later
                this.MaxHeight = SessionController.Instance.SessionView.ActualHeight;
                this.MaxWidth = Math.Max(SessionController.Instance.SessionView.ActualWidth - resizer.ActualWidth,0);
                Canvas.SetTop(this, 0);
                Canvas.SetLeft(this, SessionController.Instance.SessionView.ActualWidth - Width);
                // Metadata.ItemsSource = vm.Metadata;
                
              };

            /*
            SuggestButton.Click += delegate(object sender, RoutedEventArgs args)
            {
                var dvm = (DetailViewerViewModel)DataContext;
                var cvm = (ElementViewModel)dvm.View.DataContext;
                if (cvm is PdfNodeViewModel)
                {
                    var pvm = (PdfNodeViewModel) cvm;
                    LaunchLDA(pvm.GetAllText());
                }
                
            };
            */
            
        }

        public async Task LaunchLDA(string text)
        {
            if (String.IsNullOrEmpty(text) || string.IsNullOrWhiteSpace(text))
                return;
            var dvm = (DetailViewerViewModel)DataContext;
            var cvm = (ElementViewModel) dvm.View.DataContext;

            Task.Run(async () =>
            {
                var test = new List<string>();

                // parameters for our LDA algorithm
                string filename = cvm.Title;
                test.Add(filename);
                test.Add("niters 50");
                test.Add("ntopics 5");
                test.Add("twords 10");
                test.Add("dir ");
                test.Add("est true");
                test.Add("alpha 12.5");
                test.Add("beta .1");
                test.Add("model model-final");
                
                DieStopWords ds = new DieStopWords();
                text = await ds.removeStopWords(text);

                List<string> topics = await TagExtractor.launch(test, new List<string>() {
                    "hyperspeech navigating speechonly hypermedia barry arons media laboratory ames street e15353 cambridge email barons medialabmitcdu 02139 abstract hypermedia traditional speechonly audio environment speech recognition synthetic speech used control systems emphasize integration hypertext framework hypermedia application maneuver graphics described paper explores issues navigation visual display development database digitally recorded information user feedback images video audio hyperspeech architecture uses speech segments research hypertextstyle software allowing concise interaction navigation extending simultaneous prototype links added connect architecture data driven software traverses user interfaces feedback speechonly database audio presentation recorded audio interviews logically segmented comments topic ideas related embedded links nodes network straightforward emphasizing different user machine addition database areas continuing voice cues indicate multiple channels speech information knowledge prototype styles speech issues dynamically landmarks research includtx introduction interactive nels74 create hypermedia hypertext frameworks user interface paradigm twodimensional hypertext realizable systems proposed 1960s systems integrating app189 back82 mouse touch sensitive space nearly enge68 half century attempts audio video traditional bush45 conk87 continually systems based graphical screen navigate contrast described paper investigates presenting speech data speech visual navigational aids accessing information hyperspeechl conversational domain discussed application allowing cues user wander architecture sechonly database recorded interfaces browse speech powerful recordings communications medium scan screen text exists temporallythe lthe word hyperspeech speechonly hyperspeech used hypertext application subset generai class hyperaudio hypermedia generic term described paper systems hypermediait hypertext proceedings december 1991 images simultaneous different speech audio interfaces gave86 design issues speech schm89 sequential confounding features visual lead interfaces significantly mu1190 text video graphics navigation differently audio world here audio domain highlighting audio visual interfaces informationby longer exists difficult spatial menu selection instance click time selection domain accomplished here made time passed concepts totherightof application unstructured recorded hyperspeech circumstances driving interfaces computers paper focuses design implementation intended touchstone semistructured speech text brainstorming allow traditional appropriate particularly appealing keyboards large displays particular hyperspeech general form interaction possible applications tool personal user create organize graphical interface visually context speech data include memory audio sort filter notes speech practical impaired portable small handheld related work compared area interactive accessible databases loosely placed category considered hypermedia systems generally underlying data limited 12button interface information allow personalization traditional hypertext speechonly multimedia hypertextlike systems little systems work voice mail telephone present single view encourage freeform information exploration presented rainbow telephone communication rainbow commands where where pages ljesn90 interface allowing pages addresses issues navigation voice users dynamically bulletin board voice recordings speech recordings service encourages accessible unique manytomany database includes parunak ru89 describes common terms additional database beaten path beaten path mechanism places visited hypertext aids reduce complexity typed links stack bookmarks navigational strategies geographical hypertext used application allows user easily return navigational mechanisms backup zellweger following reduced application information documents zel189 predefined path encourages navigation narrations states users path browsing makes narrows free form likely feel disoriented freely allowing paths lost cognitive choices users focus appropriate interactions overhead hyperspeech accessing scripted browsing zellwegers focuses conversational muller overview tends modeled particularly collection accessed ascii text synthesized described paper differs spontaneous speech nodes scmn daniels important description hyperphone issues voiceio spatially spatial domain extensively interconnected speech recognition connected typed links synthetic keyboard interface form provided mu1190 state navigation voice hyperphone voice finegrained hypermedia interface nodes contain provides good hypermedia interface navigation documents objects small fragments hyperspeech difficult hyperphone speech default based recordings path hypertext proceedings december 1991 description database audio interviews user interface interviews video hypermedia schedule telephone interviews conducted academic research industrial field2 oral content conducted telephone note videotaping experts similar interviews expensive difficult interest short list questions discussed interviewees answers scheduled telephone played recorded versions questions question different data file manual intervention background longer questions relating human interface interviews automated interview roughly helping formulate program called response silence questions scope present future kept total time call telemarketingstyle digitally recordings terminated short biographical recorded detection name title deliberately minutes interviews based categorized figure stopping segmentation natural pauses phrases words useful future systems automatically manually too15 aron9 major themes summary schematic points speech files corresponding tool note boundaries translated text transcripts nodes supporting nodes database6 categories assistance workstation question comments transcription detail nodes starting determined representation segments occurred phrase segment link speech nmles feature data gathered7 urns pauses percent used final nodes8 contain short speech segments deviation seconds maximum finegrained hypermedia objects approximately minutes speech including speech database mean length brief segments parallel trailing seconds silences standard mullers seconds 2the interviewees research laurie vertelney were cecil bloch somosomo minsky apple human interface group affiliates brenda laurel human telepresence group marvin louis weitzman interface 30ne participants bathtub telephone interview interface research issues future human interface ultimate human interface scope boundaries mean perceive human interface human human interface achieve important serial mouse built digital recordings foot pedal button events controlled playback 6the node link images included hypermedia particular spatial mapping visual display information hesitation bias user listener database images intended system application running author forcing remainder biographical paper references questions nodes links include responses 8there roughly equal numbers summary nodes nodes hypertext proceedings december 1991 0000 0000 000000 00000 0000 00000 figure nodes relate summary graphical representation nodes node database horizontally contiguous links prototype link nodes database function initially identified devices pick information brain opposed blochs blood cold implementation window links supporting minskys systembased typed according opposing links comments brain send information related view ends that frankly tool thom90 used small number example speakers electrodes makes implanting user interface added there links current database9 figure possibility manipulating hypermedia traditional media developed large number system general problem links database complex links link figure shows links hypermedia problems representing speech domain types illustrates lost systemsthe hardware platform telephone analog implemented sound segments coding user feedback conventional interviews gathered 386i workstation digitization board builtin quality speech files stored uncompressed 8000 samplessecond serial controlled recorded synthesized loudspeaker figure equipped telephone interface codec playing hyperspeech recorded 8bit sparcstation telephone texttospeech speech sounds synthesizer played used appropriate differentiation authoring tool provide better layout links visual link types hypertext proceedings december 1991 isolated microcompute host workstation provides multiple word speaker machine aron89 dependent speech recognition used rs232 schm88 headsetmounted recognition performance provided recognition noise canceling noisy board server microphone environment controlled best possible sound sources user recordings synthesizer figure graphical links overlaid representation another links database version note synthesizer recognize sparcstation computer control figure hardware configuration software architecture software simple stack model tracks nodes visited previously heard node time written running standard unix operating environment user return permits semantic software traverses data driven navigational nodes database straightforward architecture allows program information embedded links concise navigation handles user hypertext proceedings december 1991 interaction data driven approach allows size database scale modify underlying softwme system feedback handled approximately lines codelo note user interface design user interface following important evolved iterative development design differences implementors systemmany visual voice interfaces similar speechbased systems improvements process issues described sections illustrate design considerations version initial paradigm played spoke selection cycle repeated sparsely explicit menu control list valid command populated options links simple associate synthesized user interface node user sound segment links follow initial hearing recording user previous follow also node heard mentioned prompts short possible reminded node twice tried smart links exited node popped node valid commands automatic returntopreviousnode potentially transitioning nodes issued levels links deep succeeding menu prompts want assumed user navigation systemthe menu prompts brought menus constantly version difficult content recordings supposedly user unknown user inundated lost noise long repetitive smart node transitions deletion places left stranded changing feedback menu items landmarks version section describes current implementation significant change variety link types added hyperspeech large number system links previous prototype nanze link minsky exploring ahead summary command automatically overview path digital radios eansition node particular marvin speaker example played browse link permits hearing detailed dozen nodes provide database similar user input added allows user step user skip statements highlevel scan feature causes related comment database levels detail database lowest level detail minsky links link node jumps entire scan order reduce increased link followed node command choices uniform longer needed analogous node hypermedia interface explicitly highlight current vocabulary link types system feedback user number links greatly type type exists node link database menus graphical menu active produces reasonable response words screen areas table clicking active shows 10this number speech devices include extensive library routines drivers control hypertext proceedings december 1991 link type command bloch laurel vertelney weitzman minsky supporting opposing continue browse scan reti repeat help options attention stop listening description transition related comments particular speaker dialogical transition transition transition transition transition play path seled previous replay current node beginning synthesize brief description list current valid commands turn speech recognize turn speech recognize node supports viewpoint node oppo viewpoint node node alias more summary node summary node control nodes help current location ortloff host minor systems segments recorded node replayed synthetic short repetitive spoken faster rate help navigationrelated adjusted primary synthetic speech changes interactive screen real estate database default change pitch wou169maxe80 normal speed maximum speech significantly types feedback conversational valuable commodity times faster repeat command intelligibility speaking increased reduce user feedback echoing recognized feedback output volume output system recordings voice speech time played invoked rate time levels direct commands louder sample interactive this dialog current implementation sounds speak minsky utterance well trodes devices pick information brain send information opposing comments think learn implanting happen fifty years elec brain user user objects idea else bloch ultimate pling vices that frankly browse obviously nervous artificial makes blood cold sort direct user summary bloch bloch terms ultimate thing unpredictable weitzman development think user weitzmans view weitzman interface continue hope achieve ultimate user informa tion weitzman well fact able improve process just there hypertext proceedings december 1991 user help interrupt information synthesizer louie weitzman interface learn things able better ways attack problem vertelney future human weitzman continue comment indus trial designer think playing user vertelney user think renaissance return interest inter rupt previous node weitzman whats minskys view future weitzman user well minsky able again minsky smart wont person anymore interface disappear need problem default soon spoken command immediately halted providing response time fast observers time users comfortable command echoing turned engage machine repair dialog typically substitution repair dialog with command echoing explicit echoing haye83 recognized crucial feedback user command rejection recognized speech output commands longer synthesized usedl recorded heard noticeable interface errorl immediately substitution schm86 errors sound lilax error13 occurs user quickly note speech recognition common rejection parameters errors speak user synthesizer minsky user user synthesizer weitzman utterance weitzman supporting interfa return weitzman weitzman hope achieve ultimate interface description desired command echoing incorrect sound started interrupt recording repeat misrecognized echo correctly recognized word desired action taken action spoken error substitution previous node command 1lat startup time configured various degrees user feedback 12rejection errm word spoken recognized 13substitution erron word spoken different word recognized hypertext proceedings december 1991 lessons learned navigating speech space einstein simple speech streamline fall apart lack identifiable allowing various degrees feedback efficient grices applicable human conversations streamlining conversational reported idea holds time valuable interactions said makeeverythingas true user interfaces speech applications however simple particulmly effort aspossible involving interface feedback concise things simple landmarks selected helps interaction maxims what machinetohuman maxims capture interfaces keeping smooth gric751 dialogs humanto ideas necessary design database ability based part independentfrom link type followed interaction mode response time aron89 easily interruptible user interrupt speech output executing based allowing chauffeured fixed location database command order make interactions recognition schm89 user provide received command user actively menus prompts navigation commands drive passively location usedl fluent transitions designed action immediate takes form instantly playback similarly feedback halting general directed dialog boxes akin possible commands advantage speech interface recognition speech types input uncluttered vocabulary large pulldown modalities goal menus artifacts space menu interaction flat accessible active contains authoring added complication recorded speech manipulated images note schematic viewed parallel handled graphically heard simultaneously hyperspeech database today transcriptions difficult hypermedia serial nonvisual display representations systems hyperspeech nature speech signal manner text video speech signals transcriptions speech segments represented efficient manually systems author plans future versions hyperspeech improvements user interface presented untapped power speech communication application extensions design techniques presented raises questions terms basic functionality proposed section intriguing answers channel command extensions variety extensions planned area user control feedback difficulty creating locating desirable able dynamically particular sound segment user bookmark stable landmarks personalized speech domain bookmarks handheld computers listening creating 14summmy points interes informative required relevant avoid ambiguity brief 15note heme difficult implementinsystemswith kuger number nodes link types hypertext proceedings december 1991 method accessing particular recognized recognizing phrase bookmark utterance following handheld computers segment node note bookmark time used recognize template trained onthefly phrase handheld command user appropriate computer instead computers subsequent goto node sound adding nodes say16 ccadd supporting years representing dynamically handheld computers bookmark links desirable scheme similar conversational create supporting newly recorded speech segment17 generate link types product currently active node18 extend database dynamically adding interfaces important links final variant technique example command idea create product adding user development node example bookmarks form idea link link browsing commands summary future human interface interviewees human inteace speech data example jump particular command paths database play minskys possible command create path database simulating voice commands added command comments modifiers allow command comments allow form laurel given topic automated autoscan comments generate onthefly contrast minsky easier navigation research possible crosssectional minsky future arguments vertelney scope debate speakers views autoscan audio effects audio particularly example recording19 fundamental desired tone lengthy recording cues provide useful wide range recording inform user this stif91 hyperspeech task system efficient example playing indicate brief recording bly82 buxt9 indication length given lengths less verbose form length milliseconds long perhaps tone suggests utterance feature voice mail systems playing longwinded playing sounds long message application indication high pitched short approximately ideally time congestion party effectthe cacophony built possible compared identifiable designer overloading present multiple abilities audio interfaces focus ones listening background audio stream segregation enhance primary secondary background differentiable user shift attention sound streams simultaneously simultaneity aron91 cher53 attention single noiseis alluded user interfaces ability humans breg90 speech signal remains channels scheme users cognitive problem ability conversations exploit help solving cocktail talker auditory speech focus signals various 16an isolated word recognize addition single better handled continuous trained short utterances supporting examples presented speech recognize words section however 170ne complication links database design present create nodes populated problem nodes sparsely distributed 18many links generated including product idea links directions 19note counterproductive this short message hypertext proceedings december 1991 sound navigationthe streams ludw90 ability cohe91 allows different form speech overheard conversations addition provide sentences ahnost universally exaggerate recording provide approaching user approaching cues suggest absolute length speech segment useful hints sound final lowering impending sentence artificially user indication doppler effect frequency shifts speech segment suggest passing hyperspeech played pitch spoken english hyperspcech lowering pitch decision branch point branch exists time final spatial nenz88 interface locations technology audio wigh30 mcke9 allowing help untangle synthetically strong spatial metaphor explicitly placing user create personalized created hyperspeeeh place sound application space hypermedia source locations individual voices particular conversations spatial space authoring tools program foundation questions nodes database organize recorded semantic content aron91a gathered organization broad manual work required specific messages automatically straightforward interviews hyperspeech asked series questions database serve application segment link segment short segments generate large number questions asked possible schm84 automatically links conclusions possibilities hyperspeech hypermedia hyperspeech described speechonly hypermedia different paper provides environments create navigate hypermedia introduction implication speechonly speech constructing significantly augment visuallybased unique variety ways specific speech input provides interfacesthe user feels navigating presents multiple views speech database node another interface addressing difficult control goal directed capture form direct computer input output embedded intonation speech easier paper subject interaction conversing window speechbased systems hands eyes body free compelling voice powerful speech rich communications adequately reading textit finally bulk listen modality medium captured text alone takes effort listen lecture read desirable necessary look screen user interface debugged wandering room reasons interacting used layers meaning listening particularly looking difficult written implications conversations conversations capture interactive description people heard interface reaching minsky powerful conversational aspects reading striking felt creating ability user laurel artificial stage order hypcrspetxh methodologies technological user interface social issues solved medium immature unexplored systems accepted interactive navigating speech domain techniques hypertext proceedings december 1991 applications focused questions raises future speech interfaces hypermedia appropriately details particular matched interface system paper terms systems useful acknowledgements material valuable paper kris thorisson with added sponsored apple thanks user interface work with input comments helped collect wrtion video images computer microsystems experts footnote davis chris provided lisa organization reviewers helpful speech created linear presentation based interview great speech stifelman content encouraging marc schmandt provided designed anonymous material work references app189 amn89 aron91a aron91b mack82 ply82 3reg9q 3ush45 3uxt91 cher53 cohe91 conk87 nge68 apple multimedia 1989 visual almanac interactive multimedia arons proceedings communications binding lantz workshop schmandt ieee comsoc ieee communications international society audio server multimedia april 1989 arons systems september authoring proceedings 1991 transcription 1991 conference tools speechbased american hypermedia society voice communication arons cocktail systems party submitted effecc exploited journal speech avios 1991 backer proceedings gano graphics interface dynamically 1982 alterable videodisc displays conference presenting human 1982 information sound computer proceedings systems pages factors 371375 bregman sound auditory press 1990 scene analysis perceptual organization bush 1945 think atlantic monthly 1761101108 july buxton znterface gaver 1990 nonspeech tutorial notes audio siggchi cherry ears 1953 experiments journal recognition society speech america acoustic 25975979 international cohen ludwig journal multidimensional systems 34319336 window management 1991 manmachine conklin 1741 september hypertext introduction 1987 survey ieee computer engelbart 1968 presentation fall joint computer conference hypertext proceedings december 1991 lyou169 gave89 gric75 lhayc83 kudw90 nexe801 lmcke91 mu1190 mels74 llru89 mesn90 schm84 schm86 schm88 schm89 stml foulke comprehension 1969 sticht accelerated review speech research intelligibility psychological bulletin 725062 humancomputer gaver auditory interaction icons 216717789 sound computer interfaces grice semantics 1975 logic conversation speech acts cole morgan pages 4158 editors academic syntax press volume hayes reddy written manmachine manmachine steps communication graceful interaction international spoken journal systems 19231284 1983 ludwig audio pincever cohen computer extending notion august window ieee 2386672 1990 maxemchuk technical experimental journal speech storage editing pages 13831395 facility bell october 1980 mckerlie personal navigation guelph stevensguille communication hypertext 1991 quadraphonic spatial sound auditory design laboratory hyperspace interface proposal documents university muller proceedings daniel cois 901990 definition voice documents nelson hugos book service computer 1974 understand computers hypertext parunak proceedings hypermedia pages 4350 topologies 1989 user navigation resnick voice technology advanced king rainbow pages building diac90 july 1990 community implications proceedings computing directions boston schmandt ieee 1984 arons conversational electronics telephone ce303xxixxiv messaging system august transactions consumer schmandt conversational 355365 american arons office voice society robust proceedings parser dialog 1986 conference 1986 generator pages system schmandt media computer 1988 mckenna workstations workstations audio telephone proceedings pages 150160 server multi conference society ieee ieee computer march schmandt arons desktop audio unix review october 1989 stifelman 1991 coerence just american voice mail system 1991 proceedings voice society hypertext proceedings december 1991 thom90 thomas purpose available xsim configurers directed guide graphs 1990 particularly xsim general petri nets tool horn cswashingtonedu manipulating anonymous menz88 proceedings 1988 wenzel wightman conveying human factors foster virtual information meeting display threedimensional acoustic society 32nd annual pages nigh89 wightrnan listening america kistler stimulus synthesis 85858867 headphone journal simulation acoustic freefield society 1989 zel189 zellweger hypertext scripted doeumenttx pages hypermedia path meehanism proceedings 1989 permission granted direct title machinery andor 1991 copy copies advantage permission copy permission 089791 appear distributed notice notice republish material provided commercial copying copyright given computing requires publication date association otherwise specific 0012 0146 hypertext proceedings december 1991",
                    "multimedia support authoring microcosm extended model beitner hall goble department electronics computer science university southampton southampton so17 email ndb88r whecssotonacuk department computer science university manchester oxford road manchester emailcarolecsmanacuk abstract paper discusses issues involved putting media hypermedia system main argument paper todate media representation underlying link strategies closely tied hypertext hypermedia argue necessary separate issues media link structure present model solves problems genuine media integration hypermedia system time model provides support creation links data different media types conceptually meaningful paper describes design microcosm object oriented extensible servicebased architecture building consistent integrated hypermedia systems based microcosm hypermedia developed southampton current implementation microcosm demonstrates flexibility objectbased services making hypermedia viable working environment approach described reduces authoring effort significantly time increasing integrity link structures providing unified model media integration keywords open hypermedia systems linking mechanisms multimedia object oriented services introduction progressed hypertext hypermedia relationships dependencies different media types considered researchers hypertexthypermedia community tendency existing hypertext systems extend include media types consideration means make links them come rush multimedia information traditional hypertext environments underlying structures biased textual data little consistency media hypermedia systems developed level sophistication issue freshly examined develop generation hypermedia systems multimedia information truly integrated paper discusses issues involved putting media hypermedia system thrust paper todate media representation underlying link strategies closely tied hypertext hypermedia argue necessary separate issues media link structure present model solves problems genuine media integration hypermedia system time model provides scope linking architecture provides support creation links data different media types conceptually meaningful microcosm object oriented extensible servicebased architecture building consistent integrated hypermedia systems paper begins short summary related work discusses shortcomings current models respect media integration including hypermedia microcosm describes work undertaken microcosm resulted ideas unified model media integration model presented discussed final section paper background hypertext systems claim hypermedia systems means original hypertext model extended allow source anchors defined certain limited media types allow destination link document media type common inherent difficulties creating representing source anchors media text node node links common multimedia systems problems simplified linking attempted media text explicit point point links little account media involved little spots example latest portable document structure adobe acrobat1 demonstrates difficulties results link structures anchors simply region definitions idea content current literature little discussion involves define link object nontext document objects documents association objects identified projects considered problems authoring support creation links different media types issues support users effective navigation information space particularly respect temporal media video sound section discuss projects attempted address issues intermedia intermedia hypermedia system27 supports creation links different media provides interface allows user navigate resulting webs created intermedia fundamentally closed explicit authoring environment supports variety media encoded proprietary data structures integration temporal media video animations developed active anchors23 intermedia active anchors refer temporal behaviour anchor dynamic document refer links bound destination documents primary consideration behaviour documents user followed links them active aspect link determines happen destination document presented video audio played example possibility recording audio following link initiating database query link extension direct correlation extension hypertext encompass multimedia intermedia puts emphasis providing consistent interface links anchors media number limitations provides limited anchor model dealing links temporal media buttons temporal media similar seen images represent temporal segment image shown effect appropriate moment sequence video window single anchor scope link expires viewing window ceases active context links restrictive fails allow user distinguish available links active temporal segment intermedia high level functionality including useful navigation tools suffers inconsistencies media integration level initial lack consideration future multimedia support elastic tools media developed elastic tools4 allow easy development multimedia interactive applications tools form hypermedia system allow authors generate applications hypermedia behaviour imposes definite distinction authors users structure authored tools passed users browsing activities project involved experimentation areas media interaction developed ideas applied real hypermedia systems support complement existing models elastic charles project5 demonstration elastic tools discussed here build hypermedia journal elastic charles hypermedia edition hypothetical american river magazine magazine authored students contained stories focusing history ecology recreation construction relating charles river stories strong video component augmented text graphics sound work elastic charles consider place video hypermedia impact hypertext completely user driven addition dynamic media causes problems links user response brndmo used concept micons motion moving movie icons represent links video inside source documents traditional icon pictorial representation entity micon works animated brndmo used micons represent links video small section destination video digitised played loop used indicate user link video provide information sequence viewed mechanism informative text description alone problems links temporal media tackled generating list links temporal medium viewed link missed user follow later date links video micons appropriate moment link invalid temporal sense removed model superior intermedia distinguishes different link anchors links merged anchor users able select anchor multiple anchors appear simultaneously micons represent links video allows users make informed choice links follow evident extension icon representation beneficial user interface multimedia system time elastic charles project brndmo micons represent links video video clear wider scope application micons allow authors make links particular entities temporal sequence correspond metaphor link following text object used text based systems summary micons preview destination document source document improving user navigational behaviour interfere significantly source document restricted types link number destinations represent amsterdam hypermedia model amsterdam hypermedia model13 considers problems extending hypertext models include multimedia information concentrates issues involved integrating timebased presentations consist number simultaneously active media items model extension dexter hypertext reference model12 developed integrate time fundamental level model leading definition contexts link define source context link hypermedia presentation effected following link destination context presentation played arriving destination link extend ideas subsequent paper14 context link makes explicit presentation affected link followed anchor presentation given explicit source destination contexts link author able state desired presentation characteristics following links including presentation currently playing continue replaced work closely related recent research area specifying delivering synchronised multimedia documents buchanan6 newcomb21 important issue development multimedia systems tackle issues extensible hypermedia terms integration multimedia different link strategies paper concerned techniques link creation link following different multimedia documents composite documents section paper open hypermedia developed university southampton discuss ways experimented integrating multimedia information system microcosm microcosm open hypermedia currently implemented microsoft windows microcosm possible browse large bodies multimedia information following links place another7 simplest form microcosm considered link service communicates number autonomous processes viewers filters message passing system important feature microcosm link strategy information links anchors held source destination documents markup instead link information held separate link databases makes possible processes examine complete link database separate item addition allows make link anchors documents held read media cdrom videodisc party proprietary document types handled respective document viewers image files word processor documents spread sheets microcosm allows number customisable actions taken selected item interest resulting supports simply clicking buttons follow links microcosm user selects item chooses action take button microcosm simply binding specific selection particular action actionsfunctions provided filter filters added extend systems functionality15 addition traditional explicit link authoring specification active regions document particular feature microcosm facility implicit anchor specifications text generic links generic link generalisation text anchor specification instead anchor described form coordinate system source anchor encoded textual representation object bounded anchor depending constraints associated generic link occurrence text selection text documents automatically anchor link explicit anchor definitions used button definitions hidden anchors presents user easily used automatically shown invisible anchor interfere presentation document users easily aware existence generic links bound specific document unconstrained nature disadvantage allow small number links available large number locations users actively search them generic links allow rapid incorporation material document immediately provides access generic links anchors contains however document destination links explicitly specified author dynamic destination anchor resolution functions text retrieval18 document attribute keying allows predefined links return newly added documents minimal extra authoring reduces need define explicit implicit links interface behaviour link structure concerned microcosm provides exceptional explicit link support media including text selections regions images dynamic moving buttons video2 temporal anchors sound documents11 belief terms microcosm consistent systems available nevertheless hypermedia systems microcosm built fundamentally textoriented architecture present form presents number restrictive practices impede development advanced link services range available media document viewers allow multimedia interfaces navigation authoring tools provided microcosm framework predominantly textual look feel underlying link representation storage text based example link database encodes anchors terms text selection offset representations converted textual representation encoded terms leads obvious restrictions considering media types creative implementation allow latitude storage requirements interface issues current model easily circumvented process improving user interface extending generic link functionality consideration generic links media text evident architecture longer stand constant creeping featurism typified development hypermedia date consequently object oriented support services approach developed allow separation hypermedia issues technical problems providing specific support media remainder paper discusses reengineering microcosm architecture allow object oriented support services improved interface media interaction microcosm object support services microcosm fundamentally message passing architecture allows applications communicate requests perform actions requests architecture model hypermedia implemented communications architecture number components required make hypermedia microcosm communication protocol document viewers allow users visualise data initiate requests microcosm communications chain link databases hold information anchors resolutions used provide structure typifies hypermedia networks components action processing responsible evaluating resolution specifications producing desired results following links starting document viewers initiating database queries authoring tools required creating links structure information network navigational tools required improve users ability effectively locate required material microcosm object support services means tools functional behaviour specific media encoding support service application cases tools share media specific requirements object services common resource service navigational tools common objects services render anchors link databases application specific media services anchor indexing searching order indicate location generic links text documents link database aware media involved able load current document search document valid occurrences anchor tasks object support services allow link database linkbase compare link specification index document derive explicit anchors generic list text viewer buttons removes requirement user actively select block text query link base anchor match generic link specifications used buttons value authoring tool significant object services allow linkbase separate techniques matching generic link specifications basic linkbase implementation depending document viewed object service provider matches link specifications document returns buttons order provide service anchor specific functions defined developer linkbase implemented object support services hierarchy functions geared providing following services buttons given document return explicit implicit derived anchors applicable presented buttons follow link given selection document return resolutions bound anchors satisfy selection links similar follow link follow link uses exact match links looks match overall selection object define anchor defines object based specification used locate anchor document selection specific media type orriginal version microcosm generic anchor algorithm text algorithms used miyabi16 simple image matching applied changes actual link database tool work currently undertaken develop ideas microcosm architecture26 object services providing extensible media support tools tools provide object services cater extension replacement shared components system link unification source anchor specification link database specific resolution component specific link creation tool needs able cater various anchor types linkbase specific requirements resolution specific requirements linker requires object services hierarchy provide following support general media support allow rendition anchors anchor selection link database specific object define source anchor entities likely make general media services resolution specific object server actions supported likely make media services suite case link database object services hierarchy used provide media specific support link generator uses provide extensible linkbase support services shows different aspects microcosm tools integrated typical object services hierarchy document viewers objects services render document objects allowing single common application handle rendition large number specific data types basic media subset general image video support viewer encode selection objects transfer microcosm communication system arbitrary selection image arbitrary selection text document link generator uses render anchors consistent user interface behaviour uses generate appropriate source anchor specifications given linkbase generate resolution evaluated component link eventually followed figures interface consistency occurs rendition services dynamic changed applications running media rendition service added party application anchor objects automatically visualised navigation authoring tools audio service provider developed extra work link generator anchor visualisations sound available anchor collection link generator tool finally linkbase uses object services provide anchor specification support media interfaces specific link database implementations implemented level linker uses services define anchor specification eventually stored link database linkbase service objects provide specific media support overall linkbase service object similar manner linker microcosm available resolutions interface presents list destination documents link following action selection action process linker attempts render exact selection defining anchor available resolutions interface provides document abstraction document abstraction document abstraction function makes media object services functions types document abstract link abstractions definition document visualisation stored link level link potentially document specific abstraction necessarily derived destination document document defined abstracts visualisations document defined microcosm document management system time request abstract document overriding link abstraction document abstraction used case laserdisc digital video micons used abstract documents improve users ability choose destination video document case laserdisc video useful video segments number disks visualisation removes need follow link order determine relevance content large datasets exists terms images video form predefined abstraction reduces navigational time taken locate documents interest networks abstracts local remote machine reduce network traffic significantly browsing finally abstract defined link specification document management system tries generate abstract dynamically reduce fetch overhead allow user simplified representations documents context cases results effective navigation available resolutions document abstraction figure shows abstraction documents plain text layout destination selection shown abstraction second document image resulting abstract derived time original document final abstract piece digital video predefined micon used limited examples document thumbnails seen advanced multimedia database browsing systems22 scope document abstraction endless issues regarding text audio currently considered cases text documents layout thumbnail destination page document heading provide useful navigational clues sound documents various techniques used depending type sound involved visual music score used represent instrumental music wave form used represent arbitrary noise case visual representations documents abstracted gaver10 hardman3 various features available media available easily extended modified alteration development abstraction techniques require changes available resolutions application likewise inclusion generic specification techniques affect implementation link database matching algorithms implemented level additionally media services currently supported utilises relevant technique available service object request text type object plain text representation included allow services understant ascii text work objects explicit authoring small hypermedia network implicit authoring conceptual relations link abstraction development motivated desire improve media consistency support hypermedia improve authoring techniques available earlier document brief discussion support implicit authoring strategies media links physical conceptual linking instantiations object text image anchors destination requires separate independent links currently direct correlation implicit specification anchor medium anchor another systems hyperset24 strathtutor19 provide interesting approach link authoring holds useful strategies provide solution consistent authoring media systems link document document level keywords attributes imply binding documents working document level allows degree simplification bypasses media issues mechanisms keyword association used cluster documents together single document similar documents share common attributes microcosm gives extensible platform initail ideas extend provide conceptual content oriented links specified independently media systems document based links microcosm specified level granularity appropriate media support used media dependent representation space information domain possible apply types link architecture link abstraction moved higher level concept concept authoring opens completely area hypermedia allowing integration previously separate research topics semantic authoring20 automatic document clustering techniques25 knowledge based systems modular unobtrusive manner figures structural difference reduction authoring effort explicit links implicit links created conceptual level relationships documents structure figure functionality figure future proofed contains links derived explicit definition conceptual links microcosm created manually expression terms authors perspective independant physical content data representation information space conclusion paper shown object based service architecture microcosm provides significant improvement functionality offered microcosm current implementation microcosm demonstrates flexibility object based services suggests forward strategies make hypermedia viable workplace approach described reduces significantly authoring effort time increasing integrity link structures scope link abstraction possible object services hierarchy leads consistent uniform management intermedia relationships promotes links status independent media documents involved allowing minimal authoring maximum connectivity data acknowledgements thanks gerard hutchings reviewing drafts paper image multimedia assistance work sponsored grant marks spencers provided material example application figues references adobe systems incorporated acrobat portable document format reference manual addison wesley june 1993 beitner media support hypermedia minithesis department electronics computer science university southampton 1229 july 1993 brewster write edwards evaluation earcons auditory humancomputer interfaces human factors computing systems interchi93 conference proceedings 222227 april 1993 brndmo elastic tools descriptive overview media working paper media laboratory cambridge massachusetts 1989 brndmo davenport creating viewing elastic charles hypermedia journal mcaleese green hypertext state intellect 1990 buchanan zellweger specifying temporal behaviour hypermedia documents lucarella nanard nanard paolini proceedings conference hypertext echt milano 262271 november 1992 davis hall heath hill wilkins towards integrated information environment open hypermedia systems lucarella nanard nanard paolini proceedings conference hypertext echt milano 181190 november 1992 egido patterson pictures category labels navigational aids catalogue browsing proceedings chi88 human factors computing systems 127132 1988 fountain hall heath davis microcosm open model hypermedia dynamic linking rizk streitz andre hypertext concepts systems applications proceedings european conference hypertext inria france cambridge university press 298311 november 1990 gaver synthesising auditory icons human factors computing systems interchi93 conference proceedings 228235 april 1993 goose enriching audio support hypermedia system technical report cstr 9403 department electronics computer science university southampton 1994 halasz schwartz dexter hypertext reference model proceedings nist hypertext standardisation workshop washington government printing office 95133 january 1993 hardman bulterman rossum amsterdam hypermedia model extending hypertext support real multimedia hypermedia 4769 1993 hardman bulterman rossum links hypermedia requirement context proceedings fifth conference hypertext seattle november 1993 hill wilkins hall open reconfigurable hypermedia systems filter based approach technical report cstr 9212 department electronics computer science university southampton 1992 hirata hara shibata hirabayashi mediabased navigation hypermedia systems proceedings fifth conference hypertext seattle 8293 november 1993 yang chen signature file spatial filter iconic image database journal visual languages computing volume 373397 december 1992 davis hall hypermedia links information retrieval proceedings 14th british computer society research colloquium information retrieval lancaster university 1992 mayes kibby watson strathtutor development evaluation learning browsing macintosh computers education 121221229 1988 nanard nanard should anchors typed experiment macweb proceedings fifth conference hypertext seattle 5162 november 1993 newcomb kipp newcomb hytime hypermediatimebased document structuring language communications 34116783 november 1991 niblack barber equitz flickner glasman petkovic yanker faloutsos qbic project querying images content colour texture shape 9203 81511 research report february 1993 planiappan yankelovich sawtelle linking active anchors stage evolution hypermedia hypermedia 214766 1990 parunak 1991 link based hypermedia taxonomic reasoning hypertext91 proceedings press salton allan selective text utilisation text travesial proceedings fifth conference hypertext seattle 131144 november 1993 wilkins griffiths hall lewis davis mavis project extending generic links content based retrieval notextual documents microcosm model 1994 research journal department electronics computer science university southampton yankelovich haan meyrowitz drucker 1988 intermedia concepts construction seamless environment ieee computer january 1988",
                    "reading spatial hypertext catherine marshall microsoft corporation ntroduction critics hypertext expressed skepticism people screen read hypertexts cite general problems reading computer screen example place blame partially feet authors example birkerts indictment hypertext fiction make usability arguments simply efficient paper texts example avoiding problematic idea reading altogether spite lack consensus hypertext good vehicle reading critics hypertext agree point hypertext represent want read anything novel reference manual magazine point theyre emphatic attend hypertext theorists theorists enthusiastic postmodern embrace medium picture critics eyes squinched shut hands dainty shelllike ears saying neener neener neener cant hear evaluation hypertext reading sparse generally evaluation relied controlled studies metrics related efficiency effectiveness speed comprehension like reading difficult observe practice considered creepy watch read detailed field studies reading hypertexts performed field studies focused kinds documents example sought construct taxonomies types reading kinds activities surround reading annotation notetaking start looked greater real people reading real hypertexts worthwhile endeavor undertaken moreover learn quite spatial hypertext looked readers viewpoint reader author studies area theyve directed people structure spatial hypertext example tradeoffs different kinds structuring functionality understanding people read hypertexts spatial hypertexts given inherent invisibility reading complex everyday activities yield important conceptual technological directions developing systems writing hypertexts short paper follow nose apply intuitions gathered ethnographic projects informal undocumented observations studies reveal phenomena associated controversial reading spatial hypertext main topics want explore arises watching people read navigate comes watching people read navigate navigation anticipation compulsion quite understood watched people read hypertexts theyd click link quite ready leave theyd merrily completing lexia theyd just left wasnt lack rhetoric arrival departure conscious selfconscious readers complained fragmentation damned fault theyd click reflexively bothering gather context text followed link characterized fragmentation attendant anxiety symptom interruptionprone lives were moving fast just need slow down fact started work spatial hypertext partly reaction allornothing nature click relationships lexia action moving binary unambiguous surely relationships authors readers perceived cutanddried spatial hypertext gave ability play juxtaposition emergence simultaneity gave forum arguing meaning proximity semantics space didnt demand readers place another rosenberg noted replaced fine theory didnt explain watched people read hypertexts both surreptitious onlooker authorized observer signed consent forms clutched hand readers click ready yellowlees douglas compelling explanation readers relationships hypertexts terms immersion engagement flow didnt existing explanation watched seemingly unrelated kinds interaction ethnographic projects project centered observations gamblers playing video poker which fully electronic experience second observations people reading magazines specifically yorker paper tablet computer detailed observations human interaction different forms engagement other moreover reading hypertexts people read works paper engage variety anticipatory gestures turning page subtle moving paper simulation presented suggest readers ways ready turn page actually doing pause midway action unconscious continuity momentarily distracted case yorker cartoon upper left corner page able resume reading noticing distraction traditional nodelink hypertext gesture compressed single action clicking predict spatial hypertext systems reduced document representations metadata surrogates like viki suffer fate spatial hypertext like intergrams gestural interfaces interestingly magazine layout somewhat hypertextual single article linear insets sidebars photos interleaved cartoons page design elements make unlikely reader approach linear text strictly linear manner fact readers jump ahead linear text reading seldom completely linear idealized immersive active experience suggested dont need eyetracking readers attention shifts returns jump return text theyve read interviews readers later make realize hypertextual shifts notable noticed reader lets look flip side video poker contrast reading complexly organized material paper people play video poker action physically compulsive readily observe player machine engaging stylized card playing gestures regular intervals intervals short clear cards arent screen long player take hand thats dealt player ahead game case gesture taken precedence results anticipatory motions encouraged possible player video poker machine pageturning buttons ebook devices link clicking screen presentations subject allornothing compulsionprone actions case linkclicking opens window relatively significant action compared subtle motions people employ shifting paper pages reading navigating spatial hypertext long remedying tyranny click cause inadvertent fragmentation readers seek minimize interruptive context switching heres frank shipmans group performed controlled studies study participants performing information triage tasks using condition spatial hypertext original task designed previous investigation spatial hypertexts role triage task examine participants different kinds information resources look screencapture data suggests areas investigation well readers expend time effort managing switches spatial overview presentation spaces constituent pages browser fact tire doing this readers willing gradually willing work metadataonly reduced document representations surrogates data adequate meet needs task hand observation readers grow frustrated management screen real estate hardly surprising readily solvable bigger higherresolution displays multiple monitors secondary displays address readers frustration simply offering pixels furthermore people dont capital equipment budgets spend display horsepower resort oldfashioned solution print copy cant screen theyre controlled study situation likely theyd workaround proposing levy most notably thorngate ames suggested attention problem attention reader hypertext trying manage second observation people resort metadataonly approaches doing work necessarily problem read large portion email exactly warily examine metadata email application displays delete multiple messages looking content recall inadvertently deleting important messages friends colleagues hasten sender alerted mistake good metadata unusual fact wary examination email metadata tuned look metadata metadata signals deception judging content metadata face value tell people driven metadataonly approaches reflection instance papers cited based title alone paper clearly hasnt read spatial hypertext solution perils clicking finding better solution reading surfaces modes interacting hardware software requirements computer reading noted researchers example xlibris project focus focus pagebased reading isnt enough reading especially reading hypertexts complicated that factors come play anticipatory gestures partial actions observe watch people read complicated paper forms magazines compulsive nature simple physical actions clicking buttonpushing observation human attention difficult manage especially absence spatial fixity visually overwhelming situations growing realization metadata isnt rich enough right enough sufficiently trustworthy upon need begin look range spatial hypertext solutions incorporate physicality reading realities human attention provide reader reading surface stable display dedicated presenting material corresponds metadata shown display surface readingoriented display principles drove creation systems xlibris mobility paperlike modes interaction microsoft reader particular readability involve investigating modes interacting reading surfaces acknowledge anticipatory gestures potential breakdown binary actions reading spatial hypertext need continue invisible secondary structuring manipulating spatial hypertext references adler gujar harrison ohara sellen diary study work related reading design implications digital reading devices proceedings chi98 angeles april 1998 press 241248 adler doren read book york simon schuster 1972 birkerts gutenberg elegies fate reading electronic boston faber faber 1994 bainbridge ones witten realistic books bizarre homage obsolete medium proceedings 2004 tuscon 2004 press crawford paper persists physical library collections matter online magazine anuaryfebruary 1998 4248 douglas hargadon pleasure principle immersion engagement flow proceedings hypertext 2000 antonio texas 2000 york press ames principles psychology york dover publications 1950 kaplan moulthrop mind gone before ontological design virtual spaces proceedings echt94 edinburgh scotland 1994 york press landow relationally encoded links rhetoric hypertext proceedings hypertext chapel hill north carolina united states 1987 york press levy scrolling forward making sense documents digital york arcade publishing 2001 marshall ruotolo readinginthesmall study reading small form factor devices proceedings cdl02 portland 1418 2002 press york 2002 5664 marshall shipman searching missing link discovering implicit structure spatial hypertext proceedings hypertext seattle november 1417 1993 york press pp217230 marshall shipman effects hypertext technology practice information triage proceedings hypertext southampton april 1997 york press 124133 marshall shipman coombs viki spatial hypertext supporting emergent structure proceedings european conference hypermedia technologies sept 1823 edinburgh scotland york press 1323 nell lost book psychology reading pleasure haven yale university press 1988 nielson matters matter hypertext usability proceedings hypertext pittsburgh pennsylvania 1989 york press ohara sellen comparison reading paper online documents proceedings atlanta georgia march 1997 york press rosenberg intergrams watertown eastgate 1995 rosenberg structure hypertext activity proceedings hypertext york press 2230 schilit price golovchinsky tanaka marshall read reading appliance revolution ieee computer anuary 1999 6573 shipman hsieh airhart maloor moore visual knowledge builder second generation spatial hypertext proceedings hypertext york press 113122 shipman hsieh moore zacchi supporting personal collections digital libraries spatial hypertext proceedings 2004 tuscon 2004 press thorngate paying attention recent trends psychology baker 1988 springerverlag york 247263",
                    "poetry computers experimenting communal text authors james catano reviewed works source computers humanities 1979 269275 published springer stable httpwwwjstororgstable30207275 accessed 11052012 1301 jstor archive indicates acceptance terms conditions available httpwwwjstororgpageinfoaboutpoliciestermsjsp jstor notforprofit service helps scholars researchers students discover build wide range content trusted digital archive information technology tools increase productivity facilitate forms scholarship information jstor contact supportjstororg springer collaborating jstor digitize preserve extend access computers humanities httpwwwjstororg computers humanities 1979 269275 northholland publishing company poetry computers experimenting communal text james catano teachers literature time poetry unusually difficult naive reader recently shrinking enrollments introductory poetry courses attested frustration students experience approaching poetry time unable ognizable plot character lacking critical framework necessary recognize discuss poetic elements present work students little portunity express satisfaction sense poem instructor establish helpful reading approach students disenchanted years brown university professor robert scholes teaching assistants nancy comley began conceive introductory poetry course simple goal establish students critical reading method engaged pressing reactions literature goal courses taught organized form intention previous poetry courses felt students resisted initial attempts establish criti reading method process reading criti commentaries mere informationgathering serving define mysterious object bore relation poem them valuable time spent demonstrating students value sound critical method needed means present poetry secondary materials students quickly come reading materials catalyst produced further meaningful text possibility using computer present james catano english department brown university materials occurred inquiry professor andries computer ences program brown interested finding courses humanities make textediting fress produce called hypertext initial definition fress hypertext professor gave follows hypertext manuscript form consists computer based collection related documents gether crossreferences footnotes annota tions associations final report capabilities fress possible peruse interrelated materials text linear fashion hypertext best seen interconnected materials given description apparent concept hypertext analogous conception poetry important facets poetry leads difficulties interpretation reflexive nature individual poems constantly develop meaningsoften means direct allusion reworking traditional motifs conventions times subtler means genre develop ment expansion biographical inferenceby refer ring total body poetic material ticular poems comprise small segment problems teaching poetry mentioned arise difficulty explaining relatively naive readers literary reflexiveness expands corrects reading poem simultaneously urging rely initial sense poem means individual facing poem required often little apparent guidance text merely read text itself place context includes literary reflections constantly james catano given poems facets readers them selves directed creators reasons felt especially important present students text referred background text fashion allow direct manipulation material computerbased collection poetic materials formed difficulty final step extremely important students partici pate text developing expanding reading hypertext surrounding initial poem encourage students participate senting facts ideas used broaden modify initial reactions time hypertext limit interpreta tions constantly growing responses reading sense expanding communal text intriguing began project fairly simple step general ideas concept course built approximately major poems separate focal point body contextual materials rippling outward poems acquainting specifics fress constructed unit william blakes sick rose addition focal poem unit consisted biographical material poems blake related poems poets critical articles fairly obvious collection mate rials available course felt means bringing students contact unique capabilities fress allow related pieces text linked felt secondary materials needed expand poetry links specially marked text students refer separate materials simple command cause material displayed reading displaying place terminal screen divided dows2 capacity screen reinforce idea poem center interconnected mate rials placing poem window student strands pull selected materials remaining windows poem cease exist vacuum central point progressively revealed body docu ments ideas designed blake unit that initial sion bare poem available comment movement outward occupy sessions generally movement followed seen normal pattern accretion second sessions materials consisted biographical information related poems session moved outward critical articles addition student supplement mate rials adding responses read subsequent sessions able browse progressively revealed responses students read comments responses instructors added responses individually written availability make entire classs hypertext work previous sessions available expanded text referred desired3 important note word browse designing course students proceed linearly series preordained steps dance better seen space occupied materials free direc tion limited requirement comment session combined process browsing commenting designed help students come aware reading forms context poem meaningful some thing hidden limited body poem meaning constructed terials hand growth text dents responses emphasize idea structed meaning production comments dents directed various materials possi areas investigation required follow hard guidelines responses answer specific questions example session blake unit students simply asked respond poem felt read poem contextual material dents responses individual gradually uncover reading pattern basis valid criti method supposedly openended responses simply means making apparent students discovery processesof making palpable gradual buildup meaning brought reading pleased possibilities ideas produced designing blake unit felt strong course consist units built roughly lines units covered week presented following order ballad andrew marvell sonnet william blake poetry computers alfred lord tennyson yeats eliot wallace stevens robert frost dylan thomas units built faced amplified version problem raised gargerys epitaph great expectations poetry costs money will eventually grants national endowment humanities brown universitys committee incentives dergraduate curriculum working hypertext created experimental section english critical analysis poetry offered fall semesters 1975 1976 began teaching looking primarily fostering activities grow attempts establish enjoyment poetry sound critical sense second urged professor fully utilize system assigned project necessitating building students substantial number links text activities discussed separately initial worries students unable enjoy poetry displayed format quickly leviated imposed requirements course ability type weeks students overcome unfamiliarity computers given initial fears them pleased progress determined course design produce hoped critical responses question students accepting computer display proceeded course fore increasing length quality responses quickly showed course enable students delve poetry deal discovered later produced impressive written material qualitative progress students required appropriate means evaluation discussed below quantity written work deserves notice average number pages produced student 1975 pages combining individual responses final project following reorganization course 1976 number dropped 4880 pages written material plus pages note files online area working taking notes large portion cases incorporated final projects total 5682 pages output students called corre spondingly large response instructors group averaged 1019 pages comments student 1975 1976 obviously course format lent readily exchange written ideas unit responses formal ture students asked comment criticize formally responses consistently high quality proceeding sessions students learned approach poem react outside materials judging sponses poems role generating response briefly learned valid critical method looking blake unit follow process reading small portions students responses students asked session unit consider helpfulness critics statements students statements material thought responses given with minimal correc tions spelling changes appear reading discussion hypertext response blakel claim understand poem blake different suggestions seemingly conflict images examination poem images come form sort message start consideration different metaphors respective implica tions solution possible reading crude basic better word worm sort sexual infection caught night thus flying night lovemaking poem impurity rose curious read backround material critical material poem about guess wrong response blake2 reading poems blake poems time pertaining theme deal concepts showed considering sick rose wrong light considered terms carpe diem theme sequently wrong track work near past marvell response blake3 article brower felt helpful concept imaginative organization gets meaning poem least points reader right direction articles state point success brower article depends suggestion readers information suggests poem difficult thing james catano explain embodies difference criticism critics classmates comes form piece advice trying understand poem kind help look personally word word information poems poet mind times fact real necessity finding message poem considered conflicting interesting speculations limited field life poem just love just evil image suggests thing metaphoric pattern many ambiguity poem every thing examined personal level eventual universal qualities poem response blake confess intimidated lack direction assignment fident analysis poem explain thinking things pressing response blake2 reading background material blake poems fascinated impli cations poem element tension exists innocence experience mind reflected sick rose bitterness disillusionment felt faced posed moral judgements institutions society gives brief simple poem underlying element power response blake3 general nature criticism demands diffe rent people different opinions dissect rephrase poem value proach depend times used excess critics were reading here brower riffaterre oddly enough help brower acted exegete riffaterre argued poem merit represent different positions somwhow balance other students continued support anticipation course design produce good critical readings began focus closely nature interaction text apparently moving easily material reading seeking links indicated generally making formal types interaction number students extensive note files copy material interesting valuable sponses addition students detailed notes students responses comments generally little linking mate rials instructors building units tighten text unwillingness link materials physically explained student reluctance test capacity system students peared residual sense careful violating collection materials text sense overcome illustrated work special units different normal format outlined above dealing sonnet poetry yeats respectively sonnet unit allowed students read sonnets asked basic qualities form second session given critical descriptions form asked construct sonnet prose sages provided session asked critical analysis poems class produced results extremely encouraging combined aspects interaction student material hand student student other gave rise critical awareness enjoyment broke sense inviolability displayed materials text sufficiently students material allow freer discussion yeats unit sense inviolability broken providing extensive manuscript versions sailing byzantium reading lected versions students eliminated minds fallible reader accomplished poet sonnet unit engaged dialogue freely units included partial response just point response yeats2 process composition helped under stand poem enjoyed sort exposing poet think possible under stand whay wants trace various ways expressing instance knew line singing school studying read simpler less poetic version theres singing school studyingmonuments means poetry computers best learn life best example follow learn appreciate beauty life timeless monuments reading fragments connected things wrote response poem session response especially progression songs stanza sensual stanza knowledge spiritual song stanza learning spiritual song fourth stanza singing apparent achievement studentmaterial dialoguean unfettered manipulation textual material include spontaneous ments statementsis dependent students realization text object process completed themselves format course capabilities fress provide fruitful means veloping dialogue needed produce communal text dialogue includes instructors students studentinstructor interaction naturally extensive instructors comments students responses form basis good deal ongoing dialogue online classroom additional type user teraction professor scholes nancy myself cases possible instructor expanding disagreeing statement another provide students sense critical byplay good discussion literature help alleviate unfortunate sense instructor final exegete text were right answers ready handed high various views propounded critical materials aided process mediate conducive idea leable text activity designed course final project required students aimed providing exten sive overview material possible instruc tions given 1976 were semester taking notes online private file order sufficient material complete final project asked consider semester poetry demands reader question twosided particular literary form called poetry role reader relation form point questions come experience read consider aspects poetry problematic aspects enjoy aspects demand special knowledge considerations lead areas metaphor allusion cultural reference rhythm emotional response intellectual background things poetry makes notes consist thoughts encounter demands aids read links specific instances rise ideas given weeks semester notes coherent theory reading poetry order areas initial problems dencies readings corrected consi changes indicated question terpretation students advised december look original responses type retros pective reading fairly simple responses comments readily available online print resulting projects formed central idea substantiated statements linked poems critical arti cles addition students reshaped ideas originally used responses collected note files projects integrated portions basic text referred read text however built systematically semester papers successful ongoing production project semester demands sophisticated dent free confident fress able conceive early important study student probably introductory course finally question classroom activity usual sense schedule arrived final offering course combined onehour sessions week computer 50minute inclass sions demand students time interchange forms meetings beneficial read students responses just prior days class helped instructor prepare studentoriented session responses indi cated areas lectures discussions prove benefit questions ideas raised carried classroom used great advantage anticipation upcoming material allowed points raised later treatment online addition meeting twice week classroom insured specific poets poetry read online discussed work progressed james catano combination classroom online work gave rise continuing dialogue discussion hard stimulate normal conditions conventional classes students read assigned material prior class follow intellectual considera tion read course students specifically asked thoughts writing begun discussion tering classroom reproduce method process predistribution papers difficult logistically materials constantly revised commented upon collected expanding communal text timeconsuming feasible classroom activities solidified belief combined computer classroom discus sion aids augments activity productive fashion valuable dialogue produced areas conjunction them decreasing interactivity classroom computer aided entered classroom students engaging intellectual activity tinued classroom foregoing discussion course presented viewed conducted aware need obtain subjective reactions well movie project presented panel discussion held 1976 meeting experimental data collected sepa rate semesters course taught data used purposes compare prog ress students sections brown universitys introductory poetry course decide time required instructor teaching course make extravagant claims comparative statistics used fulfilling purposes date taught students course limited availability single terminal users semester maximum number accommodate statistical analysis based small numbers students obviously questionable still comparisons experimental sections nonexperimental sections english guidance educational statisticians sults objectively verifiable encourag sections english taught instruc tors involved experiments course format determined personal discretion instructor purpose general evaluation common test administered students sections test consisted contemporary poems likely read students roughly equal difficulty students asked write inclass response poem class asked second poem class responses read graded evaluator familiar english involved course time purpose test evaluate progress students ability critical reading unfamiliar poem addition comparison conventional tions english special control section dents separated total group students enrol time attempts control group duplicate activities experimental tion eliminate differences resulting individual teaching approaches instructors computer tion tried leading discussions basic hypertext materials photocopied placed serve reading room university library students section asked notebooks duplicate experimental sections process responding poems students comments material notebooks devoted commenting poems read home results evalua tions 1975 summarized following table experimental section control section english sections evaluation results section average average improvement number improving points points point number declining number number evaluated number enrolled statistical breakdown 1976 gives final average score experimental section group final scores roughly parable disparity initial scores respectively reflected improvement rates experimental group registered average improvement points nonexperimental tions rate improvement 1976 statistics kept instruc poetry computers tors activities directly related course instructor hours listed categories line office meetings students class cussions class preparation extra time spent majority time listed heading spent rereading material unit prior students beginning unit included class preparation portions reading online included cate gory well period class from september december instructor devoted course erage hours week including categories average hours week spent responding students computer aver approximately minutes response note course nature time spent student flexible others course type number dents directly affects time required instruc number points time demand professor scholes makes them doubt seriously possible work students faculty putting work meet that students written much read write response students comments sponses fallen short point inade quate perfunctory doubt caliber responses continued improve course semester course respect demands great deal time save classroom time response time system suspicion expect save instructor time kind course gains area expect teach better produce students better readers poetry feel confident poetry important note time spent instructors efficiently used time spent instructor online seen type delayed direct contact instructor student instructor class whole structors comments directings concretely sent available individual eral basis comparable activity outside classroom courses papergrading problem impacted instructor time familiar many large number pers returned shortly given full particularized attention deserve moreover separation classroom dialogue written paper large computer middle ground achieved bringing individual intel lectual activity classroom dialogue conclusions regarding successes failures course stated final points made light student reactions course design joining concept hypertext concept poetry appears feasible primarily oriented text process students discover meaning literature learning manipulate vestigate text form ideas poem modify light poems materials finally test established critical textsall realtion single text available class reading comes seen merely necessary path leading hidden meaning process meaningful text develops project occupies middle ground normal classroom pedagogy computeraided instruction fearing computers write poetry cliched considering formal teaching poetry destructive human quality pression literature reactions unfortunately quite common success course gratifying project proved personal pleasure critical judgement individual vestigation classroom dialogue reading poetry computers irremediably divided activities rather serve develop augment positive educational fashion notes commands form command macros ease specific equipment used course imlac pds1d display console minicomputer connected 1200 baud telephone line browns central 36067 puter imlac located room devoted solely course materials revealed preset display keywords students make keywords again macros control type previous material wished view",
                    "toolglass magic lenses seethrough interface eric bier maureen stone pier william buxton tony derose xerox parc 3333 coyote hill road palo alto 94304 university toronto university washington abstract toolglass widgets user interface tools appear transparent sheet glass application traditional cursor positioned hand positions cursor widgets provide rich concise vocabulary operating application objects widgets incorporate visual filters called magic lens filters modify presentation application objects reveal hidden information enhance data interest suppress distracting information together tools form seethrough interface offers advantages traditional controls provide style interaction better exploits users everyday skills reduce steps cursor motion errors widgets provided user inter face designers users requiring dedicated screen space addition lenses provide rich contextdependent feedback ability view details context simultaneous widgets lenses combined form operation viewing macros used multiple applications categories subject descriptors computer graphics methodology techniquesinteraction techniques information interfaces presentation user inter facesinteraction styles pictureimage generationviewing algorithms computer graphics graphics utilitiesgraphics editors words multihand button lens viewing filter control panel menu transparent macro introduction introduce style graphical user interface called seethrough interface seethrough interface includes semi transparent interactive tools called toolglass widgets used application work area appear virtual sheet transparent glass called toolglass sheet applica tion traditional cursor widgets provide customized view application underneath them viewing filters called magic lens filters lens screen region operator magnification render wireframe performed objects viewed region user positions toolglass sheet desired objects points widgets lenses tools create spatial modes replace temporal modes user terface systems hands used operate seethrough interface user position sheet nondominant hand device trackball touchpad time dominant hand positions cursor mouse stylus thus user line widget cursor application object single twohanded gesture computer graphics simple widgets called clickthrough buttons shown figure buttons used change color objects them user positions widget vicinity indicates precisely object color clicking button cursor object shown figure buttons figure change outline colors objects addition buttons include filter shows outlines suppressing filled areas filter reminds user buttons affect filled areas allows user change color outlines obscured figure clickthrough buttons wedge objects clicking green fillcolor button clicking cyan outlinecolor button widgets placed single sheet shown figure user switch command viewing mode simply repositioning sheet figure sheet widgets clockwise upper left color palette shape palette clipboard grid delete button buttons navigate additional widgets widgets lenses composed overlapping them allowing large number specialized tools created small basic figure shows outline color palette magnifying lens makes easy point individual edges figure outline color palette magnifying lens seethrough interface implemented multide vice multiuser multieditor framework5 cedar permission copy material granted provided copies distributed direct commercial advantage copyright notice title publication date appear notice given copying permission association computing machinery copy otherwise republish requires andor specific permission 1993 acm0897916018930080015150 permission copy material granted provided copies distributed direct commercial advantage copyright notice title publication date appear notice given copying permission association computing machinery copy otherwise republish requires andor specific permission 1993 acm089791601893008150 programming language environment24 running sunos unixcompatible operating microsystems sparcstations computers gargoyle graphics editor20 integrated serves complex application test interface standard mouse dominant hand microspeed fasttrap trackball nondominant hand trackball includes buttons thumbwheel used supply additional parameters interface remainder paper organized follows section describes related work section describes examples tools developed section discusses general techniques seethrough interface section discusses advantages approach section describes implementation sections present conclusions plans future work figures figures paper reflect current capabilities software related work components seethrough interface combine work areas simultaneous hands movable tools transparent tools viewing filters section related work areas multihanded interfaces authors studied interfaces interpret continuous gestures hands kruegers videoplaces system15 position motion participants hands seen video camera determine behavior variety onscreen objects including animated creatures bspline curves buxton myers discovered users naturally overlap hands possible that hands used sequentially performance advantage singlehand use78 work characterizes situations people successfully perform twohanded tasks guiard presents evidence people welladapted tasks nondominant hand coarsely positions context dominant hand performs detailed work context4 similarly kabbash presents evidence users nondominant hand performs better dominant hand coarse positioning tasks13 takes advantage users twohanded skills nondominant hand sets context coarsely positioning sheet dominant hand acts context pointing precisely objects sheet movable tools menus cursor position movable tools work area however menus position determined cursor position appears making difficult position relative application objects existing systems provide menus positioned work area application objects example macdraw tearoff menus allow pulldown menu positioned work area repositioned clicking dragging header17 unfortunately moving menus takes cursor hand away task moved user needs manipulate objects them toolglass sheets positioned relative application objects moved tying cursor transparent tools existing systems allow menus positioned work area make menus transparent example alto markup system18 displays menu modes mouse button down menu item drawn icon space icons transparent bartletts transparent controls interactive graphics stipple patterns effect transparency windows2 systems allow user continue underlying application menu place dont allow user interact application menu dont filters modify view application interface viewing filters existing window systems provide pixel magnifier magic lens filters generalize lens metaphor representations pixels operations magnification access applicationspecific data structures lenses able perform qualitatively differ viewing operations including showing hidden information showing information completely different format operation magnification lenses produce results superior quality limited processing data screen resolution concept filter change information visualized complex introduced before251014 recent image processing systems support compostition overlapping filters23 however systems combine filtered views metaphor movable viewing lens systems provide specialpurpose lenses provide detailed views state complex diagrams example fisheye lens enhance presentation complicated graphs21 bifocal display22 provides similar functionallity viewing large space documents maspar profiler3 uses tool based magnifying lens metaphor generate including numerical data graphical display program magic lens filters combine viewing filters interaction composition broader previous systems useful component seethrough interface generalpurpose visualization paradigm lenses integral model viewed examples section shows tools demonstrate features seethrough interface implemented primarily graphical editing domain tools tailored application however seethrough interface used wide variety application domains shape property palettes palettes collections objects properties added scene figure showed widgets apply color shapes similar tools designed apply graphical properties type line styles illustration shading parameters model initial values simulation figure illustrates widget containing graphical shapes pushed through tool illustration below figure user positioned shape palette widget shown cyan illustration shown magenta user clicks shape tool copy shape added illustration widget attaches copied shape cursor interactive dragging final shape position achieved figure figure shape palette choosing shape placing shape figure shows design property palette setting face text document face regular bold active region right tool selecting text displayed region changes face application work area cursor users attention remain temporal modes modes created holding keyboard spatial modes modes changed directly bold bold italic italic regular spatial figure font face palette word directly selected changed bold face clipboards clipboard widgets pick shapes properties underlying objects acting visible instantiations copy paste keys common applications clipboards pick entire objects specific properties color dash pattern font hold single multiple copies object objects properties captured clipboard copied clipboard clicking them palette tools figure shows symmetry clipboard picks shape user clicks figure produces rotations shape multiples degrees figure moving clipboard clicking again user drops translated copy resulting symmetrical shape figure clicking small square upper left corner widget clears widget shapes clipped figure symmetry clipboard picking object rotated copies appear copies moved pasted figure shows example type clipboard rubbing picks color object user clicks object widget figure widget picks shape object reminder color came figure fillcolor rubbings placed single sheet allowing user store colors remember came from stored color applied shapes user clicks applicator rubbing figure figure fillcolor rubbings lifting color moving clipboard applying color implementing graphical paste clipboards provide general mechanism building customized libraries shapes properties previewing lenses graphical editing lens used modify visual properties graphical object provide preview changing property look like properties include color line thickness dash patterns typeface arrowheads drop shadows previewing lens used illustration look different circumstances example showing color illustration rendered blackwhite display particular printer figure shows celtic knotwork viewed lenses adds drop shadows shows picture black white achromatic lens reveals drop shadows difficult distinguish figure blackwhite display figure achromatic lens drop shadow lens knotwork knotwork andrew glassner previewing lenses parameterized example drop shadow lens parameters control color displacement shadow parameters included graphical controls sheet near lens attached input devices thumbwheel widgets selection tools selection difficult graphical editing objects overlap share common edge selection widgets address problem modifying view interpretation input actions example figure shows widget makes easy select shape vertex obscured shapes tool contains wireframe lens reveals vertices making shape interiors transparent mouse events modified snap nearest vertex select vertex select vertex figure vertex selection widget shapes widget placed selected vertex figure local scaling lens tiling doug wyatt figure shows lens shrinks object centroid lens makes easy select edge coincident edges grids figure shows widgets displays different kind grid leftmost grids rectangular different spacings rightmost grid hexagonal grid appears lens place coordinates grid bound scene grid points sheet moves clicking grid points moving widget user draw precise shapes larger widget sheet moved nondominant hand user quickly switch grids editing motion figure grid tools visualization figure illustrates tools lenses measure gaussian curvature context shaded rendering model pseudocolor view indicates sign relative magnitude curvature9 evaluation tool displays value point indicated figure gaussian curvature pseudocolor lens overlaid tool read numeric value curvature original images courtesy steve mann seethrough interface widgets lenses effective supported appropriate conventions specifying position size organize customize them section discusses issues moving sizing sheet application toolglass sheet moved clicking dragging border mouse rolling trackball sheet widgets stretch shrink unit user works second libraryElementController thumbwheel moving sizing controls user center widget applica tion object size widget cover screen region large widgets used minimize sheet motion applying widget objects widget stretched cover entire work area effectively creates command mode entire application clicking button trackball user disconnect trackball sheet enable scrolling zooming selected application area sheet appli cation user application object widget instead moving widget object convenient seethrough interface illustrations large screen managing sheets typical application large number widgets terface avoid clutter need organize widgets sheets approach widgets single sheet navigated scrolling zooming perlin foxs paper proceedings19 describes tech niques creating navigating unlimited structures single sheet second approach master sheet generates sheets sheets generate sheets hierarchical menus technique used prototype allow single sheet different sets widgets ferent times display selected ways user click special widget arrows hypercard11 jumps addition master view provides table contents available sets allowing user jump different sets simultaneously user creates additional sheets customizing sheets sheets contain unlimited number widgets provide valuable substrate users create customized widgets widget sets effect sheets provide user interface editor allowing users copy existing widgets compose macros overlapping widgets snap widgets configurations indeed techniques described paper toolglass sheet used edit another advantages seethrough tools section advantages seethrough interface advantages placing tools overlapping layers graphical nature interface applications control panel competes screen space work area application toolglass sheets exist layer work area proper management sheets provide unlimited space tools widgets entire work area then scrolled entirely screen provide unobstructed view application space different widgets seethrough user interface used tiny displays notebook computers personal digital assistants little screen real estate fixedposition control panels used wallsized displays fixed control panel physically reach screen positions tools user stay close hand user interface layer desktop provides natural place locate applicationindependent tools clipboard copy material window another widgets combine multiple task steps single step example vertex selection widget figure allows user turn viewing mode wireframe turn command mode selection point object single twohanded gesture user interfaces temporal modes cause action different effects different times inter face modes defined spatially placing widget cursor object operated thus user easily current mode label widget cursor widget addition widget provide customized feedback eration example widget edits text illustration include lens filters objects text widgets visible once feedback serves dual role helps user make proper widget helps user choose correct widget visual nature seethrough interface allows users construct personalized collections widgets described above implementation section provides overview implementation seethrough interface toolglass sheets toolglass subsystems handles simul taneous input pointing devices updates screen multiple simultaneous changes modifies pointing events pass widgets modifies graph ical output passes widget multidevice input screen refresh toolglass software uses framework5 interface relies following features takes events multiple input devices mouse trackball keeps track device produced event places events single queue dequeues event order determines application event delivered applications arranged hierarchy indicates nested screen event passed root application pass event child applications turn pass event tree mouse events generally delivered deeply nested application screen region contains mouse coordinates however user dragging rubberbanding object particular application mouse ordinates application dragging rubberbanding completed keyboard events currently selected application support toolglass sheets mmms rules handling trackball input modified sheet movable trackball thumbwheel events toplevel application interprets commands resize sheet respectively sheet movable trackball thumbwheel events delivered selected application interprets commands scroll zoom appli cation filtering input lenses widgets world root application toolglass sheet graphical editor text editor figure simple hierarchy applications ordinarily input events strictly root appli cation leaf applications however support interface input events passed tree example figure shows application hierarchy lefttoright order lower level tree indicates tobottom order applications screen input events delivered toolglass sheet determine user interacting widget lens event modified sheet case event returned root applica tion accepts event passes child applications appear farther right tree data structure represents event modified ways support toolglass sheets first event annotated representation parts application tree visited figure prevents root applica tion delivering event sheet once second event tagged command string interpreted reaches final application example color palette clickthrough button annotates mouseclick event command fillcolor followed color finally widget contains lens mouse coordinates event modified event correctly directed object appears cursor lens figure composing colorchanging widgets widgets composed overlapping them stack overlapped widgets receives input mouse click input event passed toptobottom widgets widget turn modifies command string assembled example widget concatenate additional mand current command string figure widget changes colors figure composed widget changes line colors figure form widget changes line colors figure line color widget command string linecolor blue passing widget linecolor blue fillcolor cyan widgets filtering output lenses widgets ordinarily output composed leaf applications support lenses normal screen refresh composition extended allow information flow tree example widgets figure contain lenses lenses situated graphical editor lens examine contents graphical editor which lenss sibling hierarchy order draw itself addition improve performance applications compute rectangular bounding regions recently changed propagate root application determines screen pixels need updated generally bounding passed tree transformed coordinate transformation plication tree however lenses modify pixels operation affects magnifying lens example generally increases number pixels affected result bounding passed lenses affect determine final bounding magic lens filters magic lens filter modifies image displayed region screen called viewing region applying viewing filter objects model input region lens defined viewing region viewing filter size viewing region different magnification lens model input region coneshaped volume defined point viewing region input regions used cull away model objects needed produce lens image current implementations perform culling described below advantages lenses operate entire model lenses composed effect model passed sequentially stack lenses lens operating model turn addition lens lenses modify boundaries lenses mapped screen boundary input region group lenses taken computed applying inverses viewing filters lens boundaries themselves lenses depend implementation toolglass sheets manage size shape motion viewing regions section describes strategies tried implementing viewing filters procedural method recursive ambush declarative method modelin model method promises convenient applicable called reparameterizeandclip finally discuss issues arise presence multiple model types recursive ambush recursive ambush method original model described procedurally calls graphics language interpress12 postscript1 lens interpreter graphics language different implementation graphics primitive cases implementation given graphics primitive performs actions carry modifying effect lens calls previous implementation primitive example lens modifies picture lines drawn modify drawline primitive color original drawline primitive lenses composed previous implementation original graphics language primitive lens primitive performs modification making composition recursive recursive ambush lenses appear important advantages work graphics language level work applications work procedurally need allocate storage however methods work graphics language level addition recursive ambush lenses major disadvantages first making lens requires modifying graphics language primitives second debugging composed lenses difficult effects cooperating interpreters hard understand finally performance deteriorates rapidly lenses composed lens computed times number computations doubles addition lens overlaps others modelin modelout modelin modelout mimo method make copy original model step model data structure editor representation graphics language calls array pixels picture representation implementation walks data structure modifies accordance desired behavior lens composed lenses mimo lens takes model produced lens produces modified version model associates clipping region formed intersecting clipping region lens underneath resulting models passed lenses above mimo lenses allocate storage investment pays ways first rendering single image lens computes output models once saves lenses addition computed model based entire original model redrawing picture lens moves just matter changing clipping regions model filtering needed case lens maintains table models produced table indexed models received input modified action lens consists single table lookup mimo lenses advantages given routines copy visit parts model incremental effort write mimo lens small lenses graphical editor data structures written minutes consist lines code debugging composed lenses easy intermediate steps easily viewed finally mimo lenses perform large class filtering functions access input model order particular compute output graphical search replace16 shown figure line segment replaced multi line segments create snowflake pattern figure snowflake lens triangles snowflake lens scene important variation mimo allow output model differ type input model example lens graphics language input produce pixels output case lens walks original model copying allocates data structures model type reparameterize clip original image produced screen renderer variable parameters easy implement lenses effects varying parameters function lens modifies renderer parameter asks renderer redraw model clipped boundary shape lens example lens showing wireframe version shaded model implemented reparameterizeandclip lenses composed parameter changes lenses compatible region overlap renderer rerenders original model overlapping lenses changes renderer parameters flow control performance stack lenses mimo lenses output computed input region received lenses underneath lenses differ mimo output computed original model output rendering multiple model types discussion above lenses used view single type model graphical editor data structure graphical language practice multiple model types present reasons first lens overlap multiple applications time applications different model types shown figure second lens overlap application lens lens output application model different types example figure wireframe lens converts model line drawing magnifier lens operates drawings overlaps original image output wireframe lens rich illustrations produced permitting lenses overlap tiple model types supporting multiple model types requires type conversion type tolerance lens expects type model input moved model different type automatically convert model type required type conversion example applications produce interpress graphics language calls drawing screen lens takes interpress input positioned applications application converts model interpress demand lens figure bridge shaded blocks showing wireframe lens magnifier alternatively presented model understand lens simply pass model unchanged type tolerance example lens operates graphics editors data structures modify image lenss boundary overlaps graphics editor regions unchanged composing widgets lenses widget lens composed functions combine example consider clickthrough button magnifying lens mouse events pass button annotated command pass lens applies inverse transformation mouse coordinates screen refresh widget adds appearance output lens lens widget input events transformed lens tested fall button refresh widget adds appearance model acted lens widget lens tightly coupled example editing tool include lens displayed control points editing handles implemented widgets performance sheets lenses fast useful current hardware need faster smooth motion example prototype sparcstation measured time takes redraw screen moving wireframe lens size pixels penrose tiling figure containing filled outlined shapes mimo implementation lens cached output scene takes average milliseconds repaint scene milliseconds spent drawing lens interior lens implemented recursive ambush takes longer redraw lens interior attribute procedure overhead recursive approach computing filtered scene mimo lens takes average milliseconds example computation performed illustration lens changed lens parameters modified figure magic lenses logo conclusions described style user interface seethrough interface based toolglass widgets magic lens filters seethrough interface offers design space user interfaces based spatial temporal modes provides natural medium twohanded interaction interface movable overlays application area takes permanent screen space conveniently adapted wide range display sizes overlaid tools selected brought work area simply moving toolglass sheet users attention remain focused work area operations views spatially defined user work changing global context seethrough interface provides paradigm support open software architecture toolglass sheets moved application another tied single application window provide interface common functionality applications encourage applications provide common functionality similarly magic lens filters standard graphics languages input work applications addition role user interfaces magic lens filters vide medium computer graphics artists tool scientific visualization integrated drawing tools filters enable effects speed production traditional effects figure shows magnifying lens wireframe lens used produce magic lenses logo integrated scientific visualization tools filters enhance understanding providing filtered views local regions data leaving rest view unchanged provide context shown visualization example figure hope seethrough interface prove valuable wide variety applications examples paper stress applications graphical editing tools potentially used screenbased application including spreadsheets text editors multimedia editors paint programs solid modelers circuit editors scientific visualizers meeting support tools consider applications hidden state equations spreadsheet grouping objects graph ical editor position water pipes architectural model collection widgets lenses provided view edit hidden state takes permanent screen space requires memorization mands believe seethrough interface increase productivity reducing task steps learning time providing good graphical feedback allowing users construct control panels spatial modes plans future work seethrough interface framework used create tools application domains exploring current space possibilities people years furthermore design space enlarged future software hardware carry exploration ourselves creating widgets different applica tion domains working taxonomies tools discover designing conventions composing editing navigating organizing triggering tools combining existing user interface techniques testing users performing real work building toolglass widget toolkits traditional toolkit widgets created object oriented programming second toolkit based embeddedbuttons project6 here users draw widgets collections widgets graphical editor apply behavior graphical forms behavior expressed user customization language designing algorithms increase speed tools clear magic lens filters lesser extent toolglass widgets provide consume graphics power modern computers finally working better understand model implement general composition widgets lenses especially work multiple model applications types acknowledgments thank blair macintyre implementing lenses graphics fishkin demonstration lenses text editing thank colleagues parc fruitful discussions enthusiasm including card fishkin andrew glassner david goldberg christian jacobi jock mackinlay david marimont george robertson marvin theimer annie zaenen polle zellweger plus consultants randy pausch john tukey finally thank xerox corporation supporting work trademarks patents toolglass magic lens interpress trademarks xerox corporation postscript trademark adobe systems unix trademark fasttrap trademark microspeed patents related concepts discussed paper applied xerox corporation references adobe systems incorporated postscript language reference manual second edition addisonwesley 1990 bartlett joel transparent controls interactive graphics technical note tn30 digital equipment corp palo alto july 1992 beck kent becher zaide integrating profiling debugging proceedings 1991 international conference parallel processing software august 1991 ii284ii285 guiard yves asymmetric division labor human skilled bimanual action kinematic chain model journal motor behavior 1987 486517 bier eric freeman steve user interface architecture shared editors single screen proceedings siggraph symposium user interface software technology hilton head november 1113 york 1991 7986 bier eric embeddedbuttons supporting buttons documents transactions information systems 1992 381407 buxton william myers brad study handed input proceedings boston april 1317 york 1986 321326 buxton william theres interaction meets issues manual input readings humancomputer interaction multidisciplinary approach ronald baecker william buxton editors morgan kaufmann publishers mateo 1987 dill john application color graphics display surface curvature proceedings siggraph dallas texas august computer graphics 1981 153161 goldberg adele robson dave metaphor user interface design proceedings university hawaii twelfth annual symposium sciences honolulu january 1979 pp148157 goodman danny complete hypercard handbook bantam books 1987 harrington steven buckley robert interpress source book simon schuster york 1988 kabbash paul mackenzie scott buxton william human performance computer input devices preferred nonpreferred hands proceedings interchi amsterdam april 2429 474481 krasner glenn hope stephen cookbook modelviewcontroller user interface paradigm smalltalk80 journal objectoriented programming 1988 2649 krueger myron gionfriddo thomas hinrichsen katrin videoplace artificial reality proceedings francisco april 1418 york 1985 3540 kurlander david bier eric graphical search replace proceedings siggraph atlanta georgia august computer graphics 1988 113120 macdraw manual apple computer cupertino 95014 1984 newman william markup users manual alto users handbook xerox parc technical report 1979 8596 perlin david alternative approach computer interface proceedings pier bier eric stone maureen introduction gargoyle interactive illustration tool proceedings intl conf electronic publishing document manipulation typography nice france april cambridge univ press 1988 223238 sarkar manojit brown marc graphical fisheye views graphs proceedings monterey 1992 york 1992 8391 spence robert apperley mark data base navigation office environment professional behaviour invormation technology 1982 4354 imagevision silicon graphics mountain view swinehart daniel zellweger polle beach richard hagmann robert structural view cedar programming environment transactions programming languages systems 1986 419490 weyer stephen borning alan prototype electronic encyclopedia transactions office systems 1985 6388",
                    "dont link hypermedia based taxonomic reasoning dyke parunak industrial arbor 7694049 itiorg technology 1485 48106 institute 4064 abstract hypermedia suggesting information including illustrates alternative particular highly linking nodes conceptual graphbased need alternative navigating model intersecting kind reasoning similar nodes described model graph broader definition people hypermedia allows models nodes sets nodes task deals analyst node including nodes information links nodes definition implementations particular reasoning links effective task taxonomic comparison classification viewing node thinks excluding them nonlinearly alternative exhibiting explicit paper task reasoning terms related hypermedia support graphbased setbased hypermedia hybrid concurrently paper discusses designed taxonomic kind support discusses formal reasoning describes hyperset setbased tools relationships compares hyperset reasoning implementational defines features required support graph manipulations keywords user models taxonomic reasoning interfaces architectures introduction hypermedia information implemented thinks information edges graph tasks node explains outline leads paragraph document cited general hasw90 links kind another technology depending according permits conceptual stored nodes graph moves node conceptual model amplifies chapte word leads definition garg88 cag088 lang90 binary directed nodes humans needs nonlinearly interests model based graph theory related hypermedia user pieces traditionally appropriate elucidates knowledge anothe line citation there exceptions connect leads differ kind knowledge model based theory task different model facilitates conceptual manipulation model appropriate collections similar hypertext proceedings decebmer 1991 nodes assigned sets users node nodes intersection think nodes linked directly belong implementation model hypermedia shell best difficult corresponding links arity greater basic flavor opportunistically collection characteristic hypermedia encourages hypermedia accommodate sets another terms sets conventional graph needs nondirectional manipulation moving information objects enlarge conventional graphbased nonlinearly functionally view approach contrasted uses sets hypermedia contrasting conceptual mathematical founded hypermedia conventional another node common graphbased model governs model underlying theory fact systems envision setbased users interaction implementation formalization formalism user moving hypermedia system graph theory conventional garg881 node graph shared node focus graphbased hasw90 still conceptual techniques handled single hala88 specific slots aggregation structure toul69 aggregations supports paper results different level sets employed representing sets nodes higherlevel entity expanded elements aggregation type common idiomatic ibis schema different cognitive requkments ways aggregation node components require needed undistinguished outline processor structure toulmin conk87 sets model requirement tlom interface discussed section theoretic described section compares graph formalisms discusses requirements possibility hybrid workers best served systems support tasks excluding capabilities characterizes approach section information tasks particularly section reviews prototype suited tools tasks hypermedia describes existing tools tailored shows another implementations support implementation extremely widest possible important modalities knowledge range reasoning human important subset cognitive appropriate domains thesis paper adding provides graphbased hypermedia reasoning abstracting setbased interface kind reasoning describing distinctive features hypermedia task traditional examples kind desirable better specific begin biologist fungus extensive colony elevation growing temperature spreads specimens them noticing bring similar returning field trip collected notes describing found species plant kind rock soil kinds insects exposure sunlight relative humidity notes large table groups regroups features exploring correlation specimens provide thousand different physical specimens entire dimensions crawling site details ambient observed basis classifying them hypertext proceedings decebmer 1991 linguist structure hundreds examples clause question observing structure contexts location records example separate notecard spreads floor large room repeatedly different piles exploring classified features shared function words subject matter kind literature higherlevel construct embedded studying collected newly discovered thousands language words puzzling text isolated information particular internal clause corpus occurs subject matter discussion days sorts basis classitlcation research manufacturing performs improving describing technology taking trends body information constituency case studies organization maintains audits productivity promoting consulting technology years collected single firm products facing opportunities opportunities general lessons needs compare appropriate service advanced visits identify technologies small manufacturers opportunities hundreds structure identified research organization help case reports wishes search economic problems contrast group biologist task tuxonomic linguist reasoning research organization task following performing characteristics regroup variations information immediately fungt nodes graphbased hypermedia levels specificity definitions terms text government document regulation objects manipulated question obvious examples clauses case studies interventions highly similar organize given contrast information different technical regulation another annotated categorize specimens network typically paper containing types example terms cited taxonomic dimensions reasoning presence absence branching characteristic fungi study reasoning dimensions process example develops descriptions fully biologist item begins time distinguishing defined notice structure major basic activities essentially characteristics search correlations sets them branching given specimen specimen relation compare different measure similtity need supported operations looking different single item member generating fungi grow analyst specimen sets useful available based number shared members facilitate objects single example characteristics examining sets ones example species tree think moving others help taxonomic sets based reasoning sorting members different relations show presented single simple statistical review tools taxonomic reasoning information alternatively example values characteristics model items taxonomic color size shape scheme distinguishing wont conventional necessary conventional taxonomic reasoning deals collections meet item groups items database bill hypermedia models needs reasoning characteristics hypertext proceedings decebmer 1991 section review taxonomic hypermedia ending description nonhypermedia setbased hypermedia tools needs system reasoning database tool choice taxonomic cards cards sorted inserting ones dropped systems offer kinds operations taxonomic reasoning specifically taxonomic operations relational storage layer hypermedia amhitectures mbb90 disadvantages advent computers large index cards holes punched reasoning characteristics wire relational databases potential requires fact retrieval sta69 database database technology system graph based illustrated however user interface edges coded notching holes retrieving replaced keysort computing systems easy model serve effectively largely correlations designed database mathematically databases conventional mode interaction user describes various fields commonly user conducting basis vaguely understand sort generalize nature requires ability associate interface database typically desired approach taxonomic perceived similarity similarity nodes contain items look alike similar designate just describe items tangible form query language items constraints appropriate applications reasoning sorts nodes examines photographs resulting characteristic taxonomic point item values various fields user collection reasoning query databases presume fields defined data loaded manipulated typically requires defining taxonomic reasoning dynamically incrementally separate analysis process adding fields file structure copying efficient fields reasoning progresses file file easily defined graphbased hypermedia given approximation linking support characteristic fact characteristic nodes linked given node hard arent standard nodeandlink union intersection statistical measures similarity fundamental problem granularity traditional systems provide appropriate operations sets links hypermedia environment supporting creating member instance nodes complement easy conventional binary node represent nodes structure defining representing links construct difficult setbased model node respective operations wants review given sure hypermedia view environment define operations pairs sets fine macro capabilities such conventional construct hala88 group nodes manipulated worthy desire reducing collections nodes single chapter designed support lend operations show envisions fein88 single node complexity example wish manipulate chapters single book distinctive cognitive easily entities complex implements aggregate innovations hierarchical objects permit motivated manipulations section nodes aggregates requirements taxonomic programmer complex facilitating reasoning intervention hypertext proceedings decebmer 1991 complex view objective implementations paper motivate easily extended support user extensions relation hypercube topologies certain dimensional information associated separate characteristic located intersection dimension hypercube model obviates need setbased interface applications hypercube linkbased useful restrict paru89 structure topology hyperdocument relational structure suited capturing dimension specimens studied specimen hypercube corresponding hypercube particular values hypercube instance comparison characteristics process sorting classes topology twodimensional occupy successive rows tool useful tease distinguish specimens invented facilitate hypercube comparison topic occupies topics column points another illsuited dimension specimens dimensionality display devices twodimensional characteristics time contrast characteristics hypercube represents different compared relatively values often dimension characteristic tend hypercube high view dimensions taxonomic analyst specimen concurrently wants hypercube intersection intersection characteristics model permit specimens particularly relevant discovered multiple nodes occupy occupy discriminating hypercube hypersets implementation hyperset entities conventional supports describes example application currently sefs exists working containing hypermedia prototype zero section outlines domain literary runs artifacts fundamental which analogous operations analysis nodes hyperset capabilities hyperset user begins list contains defined typical artifacts user selects artifact proceeds browse hyperset session displaying collection list scrollable subsets window basic hypermedia member dynamic multiple possible destinations entity requires decision browsing moving operation artifact moving node node graphbased member traversing link distinct sets unlike user confronts link cognitive user remove artifact special contain operations effect adding sources destinations graphbased system cognitive thinking candidate destination wish belong artifact user remove currently restrictions accessible universe null respectively multiple different hypersets artifact apply universal artifacts links image quite nodes wish reach current node hypertext proceedings decebmer 1991 hyperset union supports editors enter artifacts define subsets supports intersection complement repertoire operations respect symmetric generate sets including difference compute measure simple correlation measure sets sets motivate measure extended sets another nested artifacts included measure notice proportion proportion just geometric obvious sets measure value identical owhen disjoint furthermore sets given sizes artifacts common proportions measure artifacts mean intermediate values intersect greater sets others motivating natural distribution density plot showing application location similar hyperset text items interest artifacts study linguistic hyperset distributed elements drawn includes paru81 generate measure ability example application small agricultural case report client activities manufacturers extension industrial roughly service technology analogous course interventions institute provides extension small generate prose service help offered farmers small generating country challenges information information formal themselves structures implications manufacturers half value added providing ur189 case reports opportunities facing strategic sector economy proven difficult available differs firm survey reads them characteristics correlation number oems called foundation american half manufacturing wealth information manufacturing jobs contain suggest mining format hypotheses different productivity supplier cases follow firm rigid anecdotal tantalizing frequency levels relative employee management skill simple preprocessor analyst important hyperset permits periodically similarity analyst develop rigid collection discriminating analyst uses hypersets characteristics indexes case study separate artifact reads artifact entering case user define sets onthe analyst views artifacts similar approach permits vague difficult definitions advance features observed correlation hyperset file defining appropriate given definitions articulate user easily sets sets artifacts measure explore correlations characteristic sets interacting concurrently emerge perceptions flexibility data forcing develop different hyperset studies database techniques step understanding learn best characterize offer increased efficiency collection artifacts retrieval artifacts case conventional data arudysis confirmatory hypertext proceedings decebmer 1991 arriving setbased hypermedia taxonomy fiist place challenging task considerable comparing models extent graphbased underlying simple formalisms browsing authoring requirements formalisms presented distinctive features relevant comparing setbased hypermedia answer question graphbased setbased hypermedia overview supports layered implementation intended simply different views constructs section develops compares basic operations extends insights supports user complete simply contrasting models models highlight simple graphbased model formalism graphbased hyperbase ordered triplet nodes anchors links n1nti setof information nodes ailanzj anchors subregions nodes node anchors links ordered pairs anchors cardbased systems second anchor coextensive proper subset links linear chain entire card fiist network complex operations basic browsing second cardbased includes entire deliberate sideeffect context links identifying manually hypermedia backup stacks identify operator function systems second anchor node scrolling mapping functions anchors traversal process maps network subnetworks maps links subregion anchor node subregion usually operation defining explicitly walking devices path macros such tours reduced topology systems proper displaying user anchor range basic authoring links defined common links summary setbased include overall graph simple 3etbased model formalism setbased hyperbasc ordered pair nodes sets where n1nw information nodes just graphbased model subsets hypertext proceedings decebmer 1991 operations setbased hypermedia sets members typically effect applying functions membership starting existing ones means operations symmetric difference displaying sets node belongs collections order parameter presently support ready access gives collections natural interface complete statistical package uses browsing member applied browsing range basic authoring functions alternation function graphbased displaying user selected element operations turning anode generating such union summary devices include displaying correlation density distribution plots fact maps node maps hypermedia nodes sets intersection complement nodes measures sets hyperset items makes overlap graphs sets machinery approaches required other concept node requires additional build anchor multiple graphbased links originate setbased need concept different points node build arity traversal perform operations setbased graphbased takes node list accessible nodes node chosen need provide pairs extended links need allow links arbitrary operators hybrid implementations graph user models satisfy different another desirable manipulating collections support material prototype explore links possibility models sets graphs goal kept mind designing hypermedia implementations fust901 commonly described link layer general association links sets constructed reasoning modalities nodes links joining definitions terms antecedent setbased interface hybrid systems development tasks inconsistent system nodes dissimilar literature support conventional sets ones implement similar hyperset user layered hasw901 implementations layer provides faru90al 17aru90bl needs primitives simple applications operations adjustments basic models kind hyperrpedia particular hybrid hyperbase support graphbased triplet nodes anchors sets where permit hybrid information nodes ailamm anchors subregions nodes node anchors setbased applications restrict anchorsto entire nodes binary ordered subsets graphbased applications restrict sets hypertext proceedings decebmer 1991 existing example cag088 based system dexter reference model support hyperset abstract models kang90i model binary hypertext requires links binary directed undirected differ support requirements garg88 easily support asw90 contrast sufficiently rich conclusion reasoning information connected restricted shows expanded graph straightforward hypermedia derived hypermedia tasks come different nonlinearly binary task taxonomic flavors easier accessing long hypermedia defined value kinds reasoning reasoning experience model hypermedia supports based interface based suited taxonomic defiilition approach setbased hypermedia derived another general representation special cases allows engines support systems embodying procedurally tasks hyperset nodes severely prototype links reasoning graphbased permits design user models generalpurpose references cag088 campbell abstract caca4 july goodman 856861 general purpose hypertext machine c0nk871 conklin deliberation proceedings begeman hypertext gibis hypertext 87247252 tool team design d3sta691 estabrook mathematical brill biosciences theory taxir accessioner 5327340 in88 feiner structure palo alto seeing proceedings march forest trees 205222 hierarchical ojjice information display hypertext systems conference fust90 furuta mbb90 8393 stotts trellis hypertext reference model garg881 abstraction mechanisms hypertext cacm 317862870 hala881 halasz hypermedia reflections systems notecards cacm seven issues generation 317836855 hasw90 halasz schwartz mbb9095133 dexter hypertext reference model llang90 lange formal model hypertext mbb90 145166 lur189 luria foundation case moukrn base michigan thinking 2148 michigan manufacturing mbb90 moline standardization benigni workshop baronas nist editors publication proceedings sp500178 hypertext sptxial aru81 humanities parunak prolegomena 1536 pictorial concordances computers hypertext proceedings decebmer 1991 faru89 hypertext parunak 894350 hypermedia topologies user navigation proceedings faru90a parunak reference data model group rdmg work plan status mbb90 faru90b parunak toward reference model hypermedia mbb90 197211 toul69 toulmin uses argument cambridge university press permission granted direct title machinery andor 1991 copy appear copyright material provided commercial copying advantage copies distributed notice notice computing republish requires given publication permission copy specific permission o89791 date association otherwise 0012 0242 hypertext proceedings decebmer 1991",
                    "interaction technique notebook tree visualization treemaps spacefilling approach shneiderman university maryland introduction rooted directed graph nodes parent long discussion root offers spacefilling discussions tions contrast approach attribute research relationships tree structures work includes image processing storage compression trees traditional newspaper trees drawing hbtrees method useful provide human treemaps representation plex traditional filling representation better representation traditional approach root node page node lines connecting standard representation alternatives approach however trees focus various paper deals node rectangle node size images focussed node quadtrees goal quad trees provide efilcient operations tree representation magazine book explained representation visualization aids viewing designed tree structures arbitrary original motivation utilization representing tree structures children knuth brief mention presentation edge representa spacefilling proportional figure especially including node remainder twodimensional area representations variants representation images important tree representation bitmapped twodimensional related concepts help advanced multiattribute large tree structures human visualization trees shown work storage space link images layouts pages include rectangular indexing sought projects space gain hard disk authors university permission distributed publlation date appear association computing specific permission 1992 073003019201000092 address maryland copy material direct commercial department computer park 20742 ience humancomputer interaction laboratory college granted provided copies copyright notice given copying copy otherwiee republish advantage notice title permission requires andor machinery 0150 transactions graphics anuary 1992 pages 9299 tree visualization treemaps spacefilling approach typical 3level tree structure numbers indicating size leaf node viewed files systems subdirectories mouse change time attempts exceed windows display summary space trees additional ignored computer entire recognize hard disk filled tree structure magnitude from bytes million levels thousands perspective macintosh nodes display contents icons click directory directory quickly practical indentation elegant microsystems users organization picture information written multiple finder subdirectories node time represent them folder icon systems limited tree structure limits example microsoft plus treelike open look grasp entire problem charts then text form directory representation files spacefilling rapidly larger files consider level directory interior user traverse issuing attempt screen space allow norton utilities trees lines layouts hierarchical soon overwhelm picture designers family large wall structural size importance subdirectories application nodes names unix leaf msdos files operating files tree node page turning symantec root tree structure structures available command exceeded rapid clever soon left display trees animal species necessary relationship shown node application goal allow users deletion visualization candidates large files level file sizes bytes files range orders transactions graphics anuary 1992 shneiderman p2x3y1 q2xly2 qlx2y2 length dimensional approach necessary following appears solve practical applications fig2 treemap figurel approach file coded length impractical approach potential represented small avoid tree visualization problem choose portion line would hard drawable rectangle computationally approach problem representation multicolored long view draw view comprehensible method intensive called treemaps figures provide interesting line higher spacefilling work binpacking file algorithm opportunities treemap rectangular q1x2 number number partitions contains fraction root vertical algorithm area defined upper left lower right coordinates outgoing region sizechildl sizeroot partitioning algorithm takes tree root figure plxl edges root node determines leftmost total number line drawn subtree bytes size child size root algorithm rectangle loop continues maining vertically recurs q2x1 rectangle levels horizontally left tree 90degree splits yaxis direction remaining subtrees p2x3 q1x2 levels figure rotated partitioned p2x3 making partitions nodes acmtransactions graphics anuary 1992 tree visualization treemaps spacefilling approach visual region checkerboard types files text programs programs each owner different frequent file older files yellow grayer adjacent areas color boundary necessary users needs vary extensively satisfy situations users parameters indicate colors assigned files storage space hard disk leaf nodes ignore moment directory interior node total size subtree necessary propagate sums storage subdirectory levels tree root data maintained system preliminary tree collect data place desires display percentage root node additional size entire unused portion disk treemap algorithm assumes tree contains record directory children children array childl numchildrenl arguments clarity effect varying different colors gray thousands shading small used rectangles seeing sized spots color coding represent binary graphics color frequency different owners colors spreadsheets brighter line solution panel attribute specific control values modest storage overhead consumed consumed file pass node user interior total disk space utilization child dummy record structure pointers treemap name node file number algorithm level root arrays length current nates correctness drawn axis varies horizontally color indicates pointer root tree subtree coordinate rectangle assume lower algorithm pairs opposite corners contains higher order rectangles coordi coordinates affect indicate cuts vertically color used current rectangle addition need following paint color resets color variable size function returns argument alternatively node rectangle procedure paints rectangle given number size precomputed bytes node pointed stored initial treemaproot color upper right lower setting axis argument left corners partitions display vertically zero initial transactions graphics anuary 1992 shneiderman assumed modified arguments passed value since within treemaproot paint width qaxis treemapchild axis color axis color rectangle qaxisl paxis paint compute area location slice numchildren paxissizechildisizeroot laxis color qaxis width recur flipping axes slice execution berofnodes left right bottom previously drawn possible algorithms tried sequencing date size ascending speed andpattern inthe tree structure algorithm version deeper levels covering depth traversal cover leaf nodes descending advantages runs linearly paint rectangles colored sections breadth traversals colored sections subtrees orderingby obtaining examine region click obtain relevant screen just cursor itself allowing copying marking popup menus natural names desired nested rectangles used reduce effective filenames filename example extension users used directory date accomplishedin cursor information operations displaying users need ways candidate line deletion step directory frame display space containing display resolution pixels giving thousand small files zero byte files eliminated smaller displays subdirectories adequate standard display resolution total pixels quite adequate each file gets average small represent larger displays larger larger trees zooming displaying pixels currently trees displayed necessary select reveal 307200 files course small files applications organization department color dewey represented portfolio profit loss color coded traditional structure probability cost access poorly balanced structures program size segment code guiding applications chart number represented indicate decimal system relative dollar values purchase quite broad employees budget gain idea relative closeness planned levels number books strengths librarys represented division size uses library topic holdings stock size tree structured data coded size help represents time optimize performance tree structure represent attempt computer spent transactions graphics anuary 1992 tree visualization treemaps spacefilling approach transactions graphics january shneiderman transactions graphics anuary 1992 tree visualization treemaps spacefilling approach summary weights recursive coding shading clearly examples apple macintosh shows levels figure represents files levels color coding file type text graphics continue explore layouts better methods coping schemes operations applied files paper presents sizes leaf nodes visualization algorithm generation regions easily provides indicates relative sizes leaf nodes treemaps size coding computer high resolution files directories novel approach representing trees space filling depends color users quick overview figures implemented brian ohnson color display levels nested boxes actual disk directories runs rapidly figure encompassing applications alternate refinements large ranges file size color coding treemaps acknowledgments gratefully olsens constructive treemap algorithm humancomputer ration microsystems acknowledge thoughtful suggestions appreciate interaction comments david mounts continuing laboratorys reviewers help revising financial support apple corpo editor research references bntty friedman suru 1979 397409 nuth addisionwesley lometd salzbergb guaranteed performance nagy seth proceedings ieee canada 19s4 347349 samrt design analysis reading 1989 data structures range searching comput computer publishing programming 1968 hbtree multiattribute trans database syst 1990 625658 hierarchical representation nternatwnal conference volume fundamental algorithms reading indexing method good optically pattern scanned recognition documents montreal spatial data structures addisonwesley publishing received october 1990 revised march 1991 accepted 1991 transactions graphics anuary 1992",
                    "reading spatial hypertext catherine marshall microsoft corporation ntroduction critics hypertext expressed skepticism people screen read hypertexts cite general problems reading computer screen example place blame partially feet authors example birkerts indictment hypertext fiction make usability arguments simply efficient paper texts example avoiding problematic idea reading altogether spite lack consensus hypertext good vehicle reading critics hypertext agree point hypertext represent want read anything novel reference manual magazine point theyre emphatic attend hypertext theorists theorists enthusiastic postmodern embrace medium picture critics eyes squinched shut hands dainty shelllike ears saying neener neener neener cant hear evaluation hypertext reading sparse generally evaluation relied controlled studies metrics related efficiency effectiveness speed comprehension like reading difficult observe practice considered creepy watch read detailed field studies reading hypertexts performed field studies focused kinds documents example sought construct taxonomies types reading kinds activities surround reading annotation notetaking start looked greater real people reading real hypertexts worthwhile endeavor undertaken moreover learn quite spatial hypertext looked readers viewpoint reader author studies area theyve directed people structure spatial hypertext example tradeoffs different kinds structuring functionality understanding people read hypertexts spatial hypertexts given inherent invisibility reading complex everyday activities yield important conceptual technological directions developing systems writing hypertexts short paper follow nose apply intuitions gathered ethnographic projects informal undocumented observations studies reveal phenomena associated controversial reading spatial hypertext main topics want explore arises watching people read navigate comes watching people read navigate navigation anticipation compulsion quite understood watched people read hypertexts theyd click link quite ready leave theyd merrily completing lexia theyd just left wasnt lack rhetoric arrival departure conscious selfconscious readers complained fragmentation damned fault theyd click reflexively bothering gather context text followed link characterized fragmentation attendant anxiety symptom interruptionprone lives were moving fast just need slow down fact started work spatial hypertext partly reaction allornothing nature click relationships lexia action moving binary unambiguous surely relationships authors readers perceived cutanddried spatial hypertext gave ability play juxtaposition emergence simultaneity gave forum arguing meaning proximity semantics space didnt demand readers place another rosenberg noted replaced fine theory didnt explain watched people read hypertexts both surreptitious onlooker authorized observer signed consent forms clutched hand readers click ready yellowlees douglas compelling explanation readers relationships hypertexts terms immersion engagement flow didnt existing explanation watched seemingly unrelated kinds interaction ethnographic projects project centered observations gamblers playing video poker which fully electronic experience second observations people reading magazines specifically yorker paper tablet computer detailed observations human interaction different forms engagement other moreover reading hypertexts people read works paper engage variety anticipatory gestures turning page subtle moving paper simulation presented suggest readers ways ready turn page actually doing pause midway action unconscious continuity momentarily distracted case yorker cartoon upper left corner page able resume reading noticing distraction traditional nodelink hypertext gesture compressed single action clicking predict spatial hypertext systems reduced document representations metadata surrogates like viki suffer fate spatial hypertext like intergrams gestural interfaces interestingly magazine layout somewhat hypertextual single article linear insets sidebars photos interleaved cartoons page design elements make unlikely reader approach linear text strictly linear manner fact readers jump ahead linear text reading seldom completely linear idealized immersive active experience suggested dont need eyetracking readers attention shifts returns jump return text theyve read interviews readers later make realize hypertextual shifts notable noticed reader lets look flip side video poker contrast reading complexly organized material paper people play video poker action physically compulsive readily observe player machine engaging stylized card playing gestures regular intervals intervals short clear cards arent screen long player take hand thats dealt player ahead game case gesture taken precedence results anticipatory motions encouraged possible player video poker machine pageturning buttons ebook devices link clicking screen presentations subject allornothing compulsionprone actions case linkclicking opens window relatively significant action compared subtle motions people employ shifting paper pages reading navigating spatial hypertext long remedying tyranny click cause inadvertent fragmentation readers seek minimize interruptive context switching heres frank shipmans group performed controlled studies study participants performing information triage tasks using condition spatial hypertext original task designed previous investigation spatial hypertexts role triage task examine participants different kinds information resources look screencapture data suggests areas investigation well readers expend time effort managing switches spatial overview presentation spaces constituent pages browser fact tire doing this readers willing gradually willing work metadataonly reduced document representations surrogates data adequate meet needs task hand observation readers grow frustrated management screen real estate hardly surprising readily solvable bigger higherresolution displays multiple monitors secondary displays address readers frustration simply offering pixels furthermore people dont capital equipment budgets spend display horsepower resort oldfashioned solution print copy cant screen theyre controlled study situation likely theyd workaround proposing levy most notably thorngate ames suggested attention problem attention reader hypertext trying manage second observation people resort metadataonly approaches doing work necessarily problem read large portion email exactly warily examine metadata email application displays delete multiple messages looking content recall inadvertently deleting important messages friends colleagues hasten sender alerted mistake good metadata unusual fact wary examination email metadata tuned look metadata metadata signals deception judging content metadata face value tell people driven metadataonly approaches reflection instance papers cited based title alone paper clearly hasnt read spatial hypertext solution perils clicking finding better solution reading surfaces modes interacting hardware software requirements computer reading noted researchers example xlibris project focus focus pagebased reading isnt enough reading especially reading hypertexts complicated that factors come play anticipatory gestures partial actions observe watch people read complicated paper forms magazines compulsive nature simple physical actions clicking buttonpushing observation human attention difficult manage especially absence spatial fixity visually overwhelming situations growing realization metadata isnt rich enough right enough sufficiently trustworthy upon need begin look range spatial hypertext solutions incorporate physicality reading realities human attention provide reader reading surface stable display dedicated presenting material corresponds metadata shown display surface readingoriented display principles drove creation systems xlibris mobility paperlike modes interaction microsoft reader particular readability involve investigating modes interacting reading surfaces acknowledge anticipatory gestures potential breakdown binary actions reading spatial hypertext need continue invisible secondary structuring manipulating spatial hypertext references adler gujar harrison ohara sellen diary study work related reading design implications digital reading devices proceedings chi98 angeles april 1998 press 241248 adler doren read book york simon schuster 1972 birkerts gutenberg elegies fate reading electronic boston faber faber 1994 bainbridge ones witten realistic books bizarre homage obsolete medium proceedings 2004 tuscon 2004 press crawford paper persists physical library collections matter online magazine anuaryfebruary 1998 4248 douglas hargadon pleasure principle immersion engagement flow proceedings hypertext 2000 antonio texas 2000 york press ames principles psychology york dover publications 1950 kaplan moulthrop mind gone before ontological design virtual spaces proceedings echt94 edinburgh scotland 1994 york press landow relationally encoded links rhetoric hypertext proceedings hypertext chapel hill north carolina united states 1987 york press levy scrolling forward making sense documents digital york arcade publishing 2001 marshall ruotolo readinginthesmall study reading small form factor devices proceedings cdl02 portland 1418 2002 press york 2002 5664 marshall shipman searching missing link discovering implicit structure spatial hypertext proceedings hypertext seattle november 1417 1993 york press pp217230 marshall shipman effects hypertext technology practice information triage proceedings hypertext southampton april 1997 york press 124133 marshall shipman coombs viki spatial hypertext supporting emergent structure proceedings european conference hypermedia technologies sept 1823 edinburgh scotland york press 1323 nell lost book psychology reading pleasure haven yale university press 1988 nielson matters matter hypertext usability proceedings hypertext pittsburgh pennsylvania 1989 york press ohara sellen comparison reading paper online documents proceedings atlanta georgia march 1997 york press rosenberg intergrams watertown eastgate 1995 rosenberg structure hypertext activity proceedings hypertext york press 2230 schilit price golovchinsky tanaka marshall read reading appliance revolution ieee computer anuary 1999 6573 shipman hsieh airhart maloor moore visual knowledge builder second generation spatial hypertext proceedings hypertext york press 113122 shipman hsieh moore zacchi supporting personal collections digital libraries spatial hypertext proceedings 2004 tuscon 2004 press thorngate paying attention recent trends psychology baker 1988 springerverlag york 247263"
                });

               // List<string> topics = await TagExtractor.launch(test, new List<string>() { text });
                await UITask.Run(() =>
                {
                    var tags = cvm.Controller.LibraryElementModel.Keywords;
                    if (topics.Count > 0)
                    {
                        var topicKeywords = new List<Keyword>();
                        foreach(var topic in topics)
                        {
                            topicKeywords.Add(new Keyword(topic));
                        }
                        tags = new HashSet<Keyword>(tags.Concat(topicKeywords));
                    }
                    cvm.Controller.LibraryElementController.SetKeywords(tags);
                });
            });
        }

        /// <summary>
        /// Shows the element passed in, in the detail viewer.
        /// </summary>
        /// <param name="LibraryElementController"></param>
        /// <returns></returns>
        public async Task ShowElement(LibraryElementController controller, DetailViewTabType tabToOpenTo = DetailViewTabType.Home)
        {
            Debug.Assert(controller != null);
            _currentDetailViewable = controller;
            //Calls the view model's ShowElement method which loads regions, etc.
            var vm = (DetailViewerViewModel)DataContext;
            
            if (await vm.ShowElement(controller))
            {
                Visibility = Visibility.Visible;
            }

            //Also, for PDFs the list view of the regions is shown in the Region Editor tab. 
            if (controller.LibraryElementModel.Type == NusysConstants.ElementType.PDF)
            {
                xRegionEditorView.ShowListView(true, NusysConstants.ElementType.PDF);

            }
            else
            {
                xRegionEditorView.ShowListView(false, controller.LibraryElementModel.Type);
            }

            // Update the list of links in the Link Editor
            var linkEditorViewModel = xLinkEditorView.DataContext as LinkEditorTabViewModel;
            linkEditorViewModel?.ChangeLinkTemplates(controller);

            //Update the metadata tab.
            xMetadataEditorView.Metadatable = vm.CurrentElementController;
            xMetadataEditorView.Update();

            //If a region was previously loaded in the detail view, the region viewer should be added back.
            if (xRootPivot.Items.Count == 3)
            {
                var pivotItem = _regionEditorPivotItem as PivotItem;
                xRootPivot.Items.Add(pivotItem);
            }

            if (controller.LibraryElementModel.Type == NusysConstants.ElementType.Text || controller.LibraryElementModel.Type == NusysConstants.ElementType.Link ||
                controller.LibraryElementModel.Type == NusysConstants.ElementType.Collection || controller.LibraryElementModel.Type == NusysConstants.ElementType.Word)
            {
                if (xRootPivot?.Items?.Count == 4)
                {
                    _regionEditorPivotItem = xRootPivot.Items[3];
                    xRootPivot.Items.RemoveAt(3);
                }
            }

            switch (tabToOpenTo)
            {
                case DetailViewTabType.Metadata:
                    xRootPivot.SelectedIndex = 1;
                    break;
                case DetailViewTabType.Links:
                    xRootPivot.SelectedIndex = 2;
                    break;
                case DetailViewTabType.Regions:
                    xRootPivot.SelectedIndex = 3;
                    break;
                default:
                    xRootPivot.SelectedIndex = 0;
                    return;

            }
        }
        public async Task ShowElement(RegionLibraryElementController libraryElementController, DetailViewTabType tabToOpenTo = DetailViewTabType.Home)
        {
            Debug.Assert(libraryElementController != null);
            _currentDetailViewable = libraryElementController;
            //Calls the view model's ShowElement method which loads regions, etc.
            var vm = (DetailViewerViewModel)DataContext;
            if (await vm.ShowElement(libraryElementController))
            {
                Visibility = Visibility.Visible;
            }


            // Update the list of links in the Link Editor
            var linkEditorViewModel = xLinkEditorView.DataContext as LinkEditorTabViewModel;
            linkEditorViewModel?.ChangeLinkTemplates(libraryElementController);
            //linkEditorViewModel?.Update

            ////Make the region editor invisible
            //if (xRootPivot?.Items?.Count == 4)
            //{
            //    _regionEditorPivotItem = xRootPivot.Items[3];
            //    xRootPivot.Items.RemoveAt(3);
            //}
            
            //Update metadata editor
            xMetadataEditorView.Metadatable = libraryElementController;
            xMetadataEditorView.Update();

            switch (tabToOpenTo)
            {
                    case DetailViewTabType.Metadata:
                        xRootPivot.SelectedIndex = 1;
                        break;
                    case DetailViewTabType.Links:
                        xRootPivot.SelectedIndex = 2;
                        break;
                    case DetailViewTabType.Regions:
                        xRootPivot.SelectedIndex = 3;
                    break;
                    default:
                        xRootPivot.SelectedIndex = 0;
                    return;

            }

        }

        private void OnPropertyChanged(object sender, PropertyChangedEventArgs propertyChangedEventArgs)
        {

            var vm = (DetailViewerViewModel) DataContext;
            var prop = propertyChangedEventArgs.PropertyName;

            // setting here because you Cannot! bind to a local user control (textInputBlock)
            TitleBox.SetText(vm.Title);
        }

        private async void NewTagBox_OnKeyUp(object sender, KeyRoutedEventArgs e)
        {
            if (e.OriginalKey == VirtualKey.Enter)
            {
                await AddTag();
                e.Handled = true;
            }
        }

        private async void AddTagButton_OnClick(object sender, RoutedEventArgs e)
        {
            await AddTag();
        }

        private async Task AddTag()
        {
            //tagLine.Opacity = 1;
            var vm = (DetailViewerViewModel)DataContext;
            string newTag = NewTagBox.Text.Trim();
            var str = newTag.Replace(", ", ",");
            var tags = str.Split(',');
            foreach (var tag in tags)
            {
                if (tag != "")
                {
                    vm.CurrentElementController?.AddKeyword(new Keyword(tag));
                   // Tags.ItemsSource = vm.Tags;
                }
            }

            NewTagBox.Text = "";
        }

   
        private async Task AddMetadataKey(KeyRoutedEventArgs e)
        {
            var vm = (DetailViewerViewModel)DataContext;
            string newKey = ((TextBox)e.OriginalSource).Text.Trim();
            if (newKey != "")
            {
                vm.CurrentElementController.AddMetadata(new MetadataEntry(newKey, new List<string>(), MetadataMutability.IMMUTABLE));
            }
          //  NewMetadataBox.Text = "";
        }

        private void topBar_OnManipulationDelta(object sender, ManipulationDeltaRoutedEventArgs e)
        {
            if ((e.OriginalSource as UIElement) == (UIElement)exitButton)
            {
                return;
            }
            if ((Canvas.GetLeft(this) + this.ActualWidth < SessionController.Instance.SessionView.ActualWidth || e.Delta.Translation.X < 0)
                && (Canvas.GetLeft(this) > 0 || e.Delta.Translation.X > 0))
            {
                Canvas.SetLeft(this, Canvas.GetLeft(this) + e.Delta.Translation.X);
            }
            e.Handled = true;
        }

        private async void closeDV_OnTapped(object sender, TappedRoutedEventArgs e)
        {
            Visibility = Visibility.Collapsed;
            var vm = (DetailViewerViewModel)DataContext;
            vm.Tabs.Clear();
            var textview = (vm.View as TextDetailHomeTabView);
            textview?.Dispose();
            var videoView = vm.View as VideoDetailHomeTabView;
            videoView?.Dispose();
            videoView?.StopVideo();
            if (vm.RegionView is VideoDetailHomeTabView)
            {
                var videoRegionView = vm.RegionView as VideoDetailHomeTabView;
                videoRegionView?.Dispose();
                videoRegionView?.StopVideo();
            }
            var audioview = vm.View as AudioDetailHomeTabView;
            audioview?.Dispose();
            audioview?.StopAudio();
            if (vm.RegionView is AudioDetailHomeTabView)
            {
                var audioRegionView = vm.RegionView as AudioDetailHomeTabView;
                audioRegionView?.StopAudio();
            }
        }

        private void metaData_OnTapped(object sender, TappedRoutedEventArgs e)
        {
            var toggle = (TitleEnter.Visibility == Visibility.Collapsed);
            TitleEnter.Visibility = toggle ? Visibility.Visible : Visibility.Collapsed;
            TagContainer.Visibility = toggle ? Visibility.Visible : Visibility.Collapsed;
            nodeContent.Visibility = toggle ? Visibility.Visible : Visibility.Collapsed;
           // MetadataContainer.Visibility = toggle ? Visibility.Collapsed : Visibility.Visible;
        }
        
        private void Resize(object sender, double left, double width, double height)
        {
            Canvas.SetLeft(this, left);
            Width = width;
            if (Canvas.GetLeft(this) <= 30)
            {
                Canvas.SetLeft(this, 30);
            }
        }

        private void Resizer_OnManipulationDelta(object sender, ManipulationDeltaRoutedEventArgs e)
        {
      //      if (!_allowResize)
        //        return;

            double rightCoord = Canvas.GetLeft(this) + this.Width;

            var newWidth = Width - Math.Min(e.Delta.Translation.X, this.Width);
            
            if ((this.Width >= 600 || e.Delta.Translation.X <= 0) && (Canvas.GetLeft(this) >= 0 || e.Delta.Translation.X >= 0) && (Canvas.GetLeft(this) >= 30 || e.Delta.Translation.X >= 0))
            {
                (DataContext as DetailViewerViewModel)?.ChangeSize(this, rightCoord - newWidth, newWidth, Height);
                e.Handled = true;
            }


            // just in case width goes past 600 - b/c manipulation delta doesn't catch everything if moving too fast -- temporary fix?
            (DataContext as DetailViewerViewModel)?.ChangeRegionsSize(this, newWidth, Height);

            if (Canvas.GetLeft(this) <= 30)
            {
                Canvas.SetLeft(this,30);
            }

            var vm = (DetailViewerViewModel)DataContext;
            vm.TabPaneHeight = this.Width; //once again, will need to refactor this - supposed to be TabPaneWidth
            //avoid passing in infinity:
            if(vm.Tabs.Count == 0) { return; }
            vm.TabHeight = vm.TabPaneHeight/vm.Tabs.Count;
        }

        private void TabList_OnTapped(object sender, TappedRoutedEventArgs e)
        {
            var viewable = (sender as FrameworkElement)?.DataContext as IDetailViewable;
            if (viewable == null)
            {
                return;
            }
            var vm = DataContext as DetailViewerViewModel;
            if (vm == null)
            {
                return;
            }
            DetailViewTabType tabToOpenTo = DetailViewTabType.Home;
            if (vm.TabDictionary.ContainsKey(viewable?.TabId()))
            {
                tabToOpenTo = vm.TabDictionary[viewable?.TabId()];
            }
            if (viewable is RegionLibraryElementController)
            {
                ShowElement(viewable as RegionLibraryElementController, tabToOpenTo);

            } else if (viewable is LibraryElementController)
            {
                ShowElement(viewable as LibraryElementController, tabToOpenTo);
            }
            
            e.Handled = true;
        }

        private void ExitTab_OnTapped(object sender, TappedRoutedEventArgs e)
        {
            var viewableToClose = (sender as FrameworkElement)?.DataContext as IDetailViewable;
            var vm = DataContext as DetailViewerViewModel;
            if (vm == null)
            {
                return;
            }
            var tabs = vm?.Tabs;
            tabs?.Remove(viewableToClose);
            if (tabs?.Count < 2)
            {
                vm.TabVisibility = Visibility.Collapsed;
            }
            vm.Tabs = tabs;
            if (tabs?.Count > 0)
            {
                var viewable = vm.Tabs?[tabs.Count - 1];
                DetailViewTabType tabToOpenTo = DetailViewTabType.Home;
                if (vm.TabDictionary.ContainsKey(viewable?.TabId()))
                {
                    tabToOpenTo = vm.TabDictionary[viewable?.TabId()];
                }
                if (viewable is RegionLibraryElementController)
                {
                    ShowElement(viewable as RegionLibraryElementController, tabToOpenTo);

                }
                else if (viewable is LibraryElementController)
                {
                    ShowElement(viewable as LibraryElementController);
                }
            }
            vm.TabHeight = vm.TabPaneHeight/vm.Tabs.Count;
            e.Handled = true;
        }

        private void TitleBox_OnTextChanged(object source, string title)
        {
            var vm = (DetailViewerViewModel)DataContext;
            vm.ChangeControllersTitle(title);
        }

        private async void XRootPivot_OnSelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            var vm = (DetailViewerViewModel)DataContext;

            //vm.ChangeRegionsSize(this, this.Width, this.Height);
            //(DataContext as DetailViewerViewModel)?.ChangeSize(this, Canvas.GetLeft(this) + this.Width + 50, this.Width + 50, Height);
            //Resizer_OnManipulationDelta(this, );
            //Resize(this, Canvas.GetLeft(this), Width + 50, Height);


            //For a hacky fix to the detail viewer region bug, uncomment the following commented out lines of code.

            var listView = sender as Pivot;
            var index = listView?.SelectedIndex;

                        
            if (vm.TabDictionary.ContainsKey(_currentDetailViewable.TabId()))
            {
                switch (index.Value)
                {
                    case 0:
                        vm.TabDictionary[_currentDetailViewable.TabId()] = DetailViewTabType.Home;
                        var home = vm.View.DataContext as DetailHomeTabViewModel;
                        home.SetExistingRegions();
                        break;
                    case 1:
                        vm.TabDictionary[_currentDetailViewable.TabId()] = DetailViewTabType.Metadata;
                        break;
                    case 2:
                        vm.TabDictionary[_currentDetailViewable.TabId()] = DetailViewTabType.Links;
                        break;
                    case 3:
                        vm.TabDictionary[_currentDetailViewable.TabId()] = DetailViewTabType.Regions;
                        var region = vm.RegionView.DataContext as DetailHomeTabViewModel;
                        region.SetExistingRegions();
                        break;

                }

            }
            else
            {
                switch (index.Value)
                {
                    case 0:
                        vm.TabDictionary.Add(_currentDetailViewable.TabId(), DetailViewTabType.Home);
                        var home = vm.View.DataContext as DetailHomeTabViewModel;
                        home.SetExistingRegions();
                        break;
                    case 1:
                        vm.TabDictionary.Add(_currentDetailViewable.TabId(), DetailViewTabType.Metadata);
                        break;
                    case 2:
                        vm.TabDictionary.Add(_currentDetailViewable.TabId(), DetailViewTabType.Links);
                        break;
                    case 3:
                        vm.TabDictionary.Add(_currentDetailViewable.TabId(), DetailViewTabType.Regions);
                        var region = vm.RegionView.DataContext as DetailHomeTabViewModel;
                        region.SetExistingRegions();
                        break;
                }
            }


        }
    }
}
